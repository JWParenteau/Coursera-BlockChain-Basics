{
	"id": "350fa889ac6874cc5da4a16a97d40fd7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.9",
	"solcLongVersion": "0.5.9+commit.e560f70d",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotV2-J.sol": {
				"content": "pragma solidity ^0.5.9;\r\ncontract Ballot {\r\n\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint8 vote;\r\n        // address delegate;\r\n    }\r\n    struct Proposal {\r\n        uint voteCount; // could add other data about proposal\r\n    }\r\n    enum Stage {Init,Reg, Vote, Done}\r\n    Stage public stage = Stage.Init;\r\n\r\n    address chairperson;\r\n    mapping(address => Voter) voters;\r\n    Proposal[] proposals;\r\n\r\n\r\n    uint startTime;\r\n\r\n    /// Create a new ballot with $(_numProposals) different proposals.\r\n    constructor(uint8 _numProposals) public {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 2;\r\n        proposals.length = _numProposals;\r\n        stage = Stage.Reg;\r\n        startTime = now;\r\n    }\r\n\r\n    /// Give $(toVoter) the right to the vote on this ballot.\r\n    /// May only be called by $(chairperson).\r\n    function register(address toVoter) public {\r\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\r\n        voters[toVoter].weight = 1;\r\n        voters[toVoter].voted = false; \r\n        if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;}\r\n    }\r\n\r\n    /// Give a single vote to proposal $(toProposal).\r\n    function vote(uint8 toProposal) public {\r\n        Voter storage sender = voters[msg.sender];\r\n        if (sender.voted || toProposal >= proposals.length) return;\r\n        sender.voted = true;\r\n        sender.vote = toProposal;\r\n        proposals[toProposal].voteCount += sender.weight;\r\n        if (now > (startTime+ 10 seconds)) {stage = Stage.Done;}\r\n    }\r\n\r\n    function winningProposal() public view returns (uint8 _winningProposal) {\r\n        if (stage != Stage.Done) {return _winningProposal;}\r\n        uint256 winningVoteCount = 0;\r\n        for (uint8 prop = 0; prop < proposals.length; prop++)\r\n            if (proposals[prop].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[prop].voteCount;\r\n                _winningProposal = prop;\r\n            }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"BallotV2-J.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BallotV2-J.sol\":25:2018  contract Ballot {\r... */\n  mstore(0x40, 0x80)\n    /* \"BallotV2-J.sol\":325:335  Stage.Init */\n  0x00\n    /* \"BallotV2-J.sol\":304:335  Stage public stage = Stage.Init */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV2-J.sol\":535:756  constructor(uint8 _numProposals) public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"BallotV2-J.sol\":535:756  constructor(uint8 _numProposals) public {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_3:\n    /* \"BallotV2-J.sol\":535:756  constructor(uint8 _numProposals) public {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"BallotV2-J.sol\":600:610  msg.sender */\n  caller\n    /* \"BallotV2-J.sol\":586:597  chairperson */\n  0x00\n  0x01\n    /* \"BallotV2-J.sol\":586:610  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV2-J.sol\":650:651  2 */\n  0x02\n    /* \"BallotV2-J.sol\":621:627  voters */\n  0x01\n    /* \"BallotV2-J.sol\":621:640  voters[chairperson] */\n  0x00\n    /* \"BallotV2-J.sol\":628:639  chairperson */\n  dup1\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotV2-J.sol\":621:640  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotV2-J.sol\":621:647  voters[chairperson].weight */\n  0x00\n  add\n    /* \"BallotV2-J.sol\":621:651  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV2-J.sol\":681:694  _numProposals */\n  dup1\n    /* \"BallotV2-J.sol\":662:694  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"BallotV2-J.sol\":662:671  proposals */\n  0x02\n    /* \"BallotV2-J.sol\":662:694  proposals.length = _numProposals */\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"BallotV2-J.sol\":713:722  Stage.Reg */\n  0x01\n    /* \"BallotV2-J.sol\":705:710  stage */\n  0x00\n  dup1\n    /* \"BallotV2-J.sol\":705:722  stage = Stage.Reg */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  invalid\ntag_8:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV2-J.sol\":745:748  now */\n  timestamp\n    /* \"BallotV2-J.sol\":733:742  startTime */\n  0x03\n    /* \"BallotV2-J.sol\":733:748  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV2-J.sol\":535:756  constructor(uint8 _numProposals) public {\r... */\n  pop\n    /* \"BallotV2-J.sol\":25:2018  contract Ballot {\r... */\n  jump(tag_9)\ntag_7:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  dup2\n  dup4\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\ntag_10:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_12:\n  tag_13\n  swap2\n  swap1\ntag_14:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup1\n  dup3\n  add\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_14)\ntag_15:\n  pop\n  swap1\n  jump\ntag_13:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotV2-J.sol\":25:2018  contract Ballot {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"BallotV2-J.sol\":25:2018  contract Ballot {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4420e486\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotV2-J.sol\":874:1158  function register(address toVoter) public {\r... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"BallotV2-J.sol\":874:1158  function register(address toVoter) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"BallotV2-J.sol\":1587:2015  function winningProposal() public view returns (uint8 _winningProposal) {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV2-J.sol\":1221:1579  function vote(uint8 toProposal) public {\r... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"BallotV2-J.sol\":1221:1579  function vote(uint8 toProposal) public {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"BallotV2-J.sol\":304:335  Stage public stage = Stage.Init */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV2-J.sol\":874:1158  function register(address toVoter) public {\r... */\n    tag_9:\n        /* \"BallotV2-J.sol\":945:956  chairperson */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2-J.sol\":931:956  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV2-J.sol\":931:941  msg.sender */\n      caller\n        /* \"BallotV2-J.sol\":931:956  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BallotV2-J.sol\":931:981  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_19\n      jumpi\n      pop\n        /* \"BallotV2-J.sol\":960:966  voters */\n      0x01\n        /* \"BallotV2-J.sol\":960:975  voters[toVoter] */\n      0x00\n        /* \"BallotV2-J.sol\":967:974  toVoter */\n      dup3\n        /* \"BallotV2-J.sol\":960:975  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2-J.sol\":960:981  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2-J.sol\":931:981  msg.sender != chairperson || voters[toVoter].voted */\n    tag_19:\n        /* \"BallotV2-J.sol\":927:990  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_20\n      jumpi\n        /* \"BallotV2-J.sol\":983:990  return; */\n      jump(tag_18)\n        /* \"BallotV2-J.sol\":927:990  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_20:\n        /* \"BallotV2-J.sol\":1025:1026  1 */\n      0x01\n        /* \"BallotV2-J.sol\":1000:1006  voters */\n      dup1\n        /* \"BallotV2-J.sol\":1000:1015  voters[toVoter] */\n      0x00\n        /* \"BallotV2-J.sol\":1007:1014  toVoter */\n      dup4\n        /* \"BallotV2-J.sol\":1000:1015  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2-J.sol\":1000:1022  voters[toVoter].weight */\n      0x00\n      add\n        /* \"BallotV2-J.sol\":1000:1026  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV2-J.sol\":1061:1066  false */\n      0x00\n        /* \"BallotV2-J.sol\":1037:1043  voters */\n      0x01\n        /* \"BallotV2-J.sol\":1037:1052  voters[toVoter] */\n      0x00\n        /* \"BallotV2-J.sol\":1044:1051  toVoter */\n      dup4\n        /* \"BallotV2-J.sol\":1037:1052  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2-J.sol\":1037:1058  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n        /* \"BallotV2-J.sol\":1037:1066  voters[toVoter].voted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2-J.sol\":1100:1110  10 seconds */\n      0x0a\n        /* \"BallotV2-J.sol\":1089:1098  startTime */\n      sload(0x03)\n        /* \"BallotV2-J.sol\":1089:1110  startTime+ 10 seconds */\n      add\n        /* \"BallotV2-J.sol\":1082:1085  now */\n      timestamp\n        /* \"BallotV2-J.sol\":1082:1111  now > (startTime+ 10 seconds) */\n      gt\n        /* \"BallotV2-J.sol\":1078:1151  if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;} */\n      iszero\n      tag_21\n      jumpi\n        /* \"BallotV2-J.sol\":1122:1132  Stage.Vote */\n      0x02\n        /* \"BallotV2-J.sol\":1114:1119  stage */\n      0x00\n      dup1\n        /* \"BallotV2-J.sol\":1114:1132  stage = Stage.Vote */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_22\n      jumpi\n      invalid\n    tag_22:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2-J.sol\":1146:1149  now */\n      timestamp\n        /* \"BallotV2-J.sol\":1134:1143  startTime */\n      0x03\n        /* \"BallotV2-J.sol\":1134:1149  startTime = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV2-J.sol\":1078:1151  if (now > (startTime+ 10 seconds)) {stage = Stage.Vote; startTime = now;} */\n    tag_21:\n        /* \"BallotV2-J.sol\":874:1158  function register(address toVoter) public {\r... */\n    tag_18:\n      pop\n      jump\t// out\n        /* \"BallotV2-J.sol\":1587:2015  function winningProposal() public view returns (uint8 _winningProposal) {\r... */\n    tag_11:\n        /* \"BallotV2-J.sol\":1635:1657  uint8 _winningProposal */\n      0x00\n        /* \"BallotV2-J.sol\":1683:1693  Stage.Done */\n      0x03\n        /* \"BallotV2-J.sol\":1674:1693  stage != Stage.Done */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_24\n      jumpi\n      invalid\n    tag_24:\n        /* \"BallotV2-J.sol\":1674:1679  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2-J.sol\":1674:1693  stage != Stage.Done */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_25\n      jumpi\n      invalid\n    tag_25:\n      eq\n        /* \"BallotV2-J.sol\":1670:1721  if (stage != Stage.Done) {return _winningProposal;} */\n      tag_26\n      jumpi\n        /* \"BallotV2-J.sol\":1703:1719  _winningProposal */\n      dup1\n        /* \"BallotV2-J.sol\":1696:1719  return _winningProposal */\n      swap1\n      pop\n      jump(tag_23)\n        /* \"BallotV2-J.sol\":1670:1721  if (stage != Stage.Done) {return _winningProposal;} */\n    tag_26:\n        /* \"BallotV2-J.sol\":1731:1755  uint256 winningVoteCount */\n      0x00\n        /* \"BallotV2-J.sol\":1758:1759  0 */\n      dup1\n        /* \"BallotV2-J.sol\":1731:1759  uint256 winningVoteCount = 0 */\n      swap1\n      pop\n        /* \"BallotV2-J.sol\":1775:1785  uint8 prop */\n      0x00\n        /* \"BallotV2-J.sol\":1788:1789  0 */\n      dup1\n        /* \"BallotV2-J.sol\":1775:1789  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"BallotV2-J.sol\":1770:2008  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n    tag_27:\n        /* \"BallotV2-J.sol\":1798:1807  proposals */\n      0x02\n        /* \"BallotV2-J.sol\":1798:1814  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV2-J.sol\":1791:1795  prop */\n      dup2\n        /* \"BallotV2-J.sol\":1791:1814  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"BallotV2-J.sol\":1770:2008  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      iszero\n      tag_28\n      jumpi\n        /* \"BallotV2-J.sol\":1869:1885  winningVoteCount */\n      dup2\n        /* \"BallotV2-J.sol\":1841:1850  proposals */\n      0x02\n        /* \"BallotV2-J.sol\":1851:1855  prop */\n      dup3\n        /* \"BallotV2-J.sol\":1841:1856  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_30\n      jumpi\n      invalid\n    tag_30:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV2-J.sol\":1841:1866  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV2-J.sol\":1841:1885  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"BallotV2-J.sol\":1837:2008  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_32\n      jumpi\n        /* \"BallotV2-J.sol\":1925:1934  proposals */\n      0x02\n        /* \"BallotV2-J.sol\":1935:1939  prop */\n      dup2\n        /* \"BallotV2-J.sol\":1925:1940  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_33\n      jumpi\n      invalid\n    tag_33:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV2-J.sol\":1925:1950  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV2-J.sol\":1906:1950  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"BallotV2-J.sol\":1988:1992  prop */\n      dup1\n        /* \"BallotV2-J.sol\":1969:1992  _winningProposal = prop */\n      swap3\n      pop\n        /* \"BallotV2-J.sol\":1837:2008  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n    tag_32:\n        /* \"BallotV2-J.sol\":1816:1822  prop++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BallotV2-J.sol\":1770:2008  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      jump(tag_27)\n    tag_28:\n      pop\n        /* \"BallotV2-J.sol\":1587:2015  function winningProposal() public view returns (uint8 _winningProposal) {\r... */\n      pop\n    tag_23:\n      swap1\n      jump\t// out\n        /* \"BallotV2-J.sol\":1221:1579  function vote(uint8 toProposal) public {\r... */\n    tag_14:\n        /* \"BallotV2-J.sol\":1271:1291  Voter storage sender */\n      0x00\n        /* \"BallotV2-J.sol\":1294:1300  voters */\n      0x01\n        /* \"BallotV2-J.sol\":1294:1312  voters[msg.sender] */\n      0x00\n        /* \"BallotV2-J.sol\":1301:1311  msg.sender */\n      caller\n        /* \"BallotV2-J.sol\":1294:1312  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV2-J.sol\":1271:1312  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"BallotV2-J.sol\":1327:1333  sender */\n      dup1\n        /* \"BallotV2-J.sol\":1327:1339  sender.voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV2-J.sol\":1327:1373  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_36\n      jumpi\n      pop\n        /* \"BallotV2-J.sol\":1357:1366  proposals */\n      0x02\n        /* \"BallotV2-J.sol\":1357:1373  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV2-J.sol\":1343:1353  toProposal */\n      dup3\n        /* \"BallotV2-J.sol\":1343:1373  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"BallotV2-J.sol\":1327:1373  sender.voted || toProposal >= proposals.length */\n    tag_36:\n        /* \"BallotV2-J.sol\":1323:1382  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_37\n      jumpi\n        /* \"BallotV2-J.sol\":1375:1382  return; */\n      pop\n      jump(tag_35)\n        /* \"BallotV2-J.sol\":1323:1382  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_37:\n        /* \"BallotV2-J.sol\":1407:1411  true */\n      0x01\n        /* \"BallotV2-J.sol\":1392:1398  sender */\n      dup2\n        /* \"BallotV2-J.sol\":1392:1404  sender.voted */\n      0x01\n      add\n      0x00\n        /* \"BallotV2-J.sol\":1392:1411  sender.voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2-J.sol\":1436:1446  toProposal */\n      dup2\n        /* \"BallotV2-J.sol\":1422:1428  sender */\n      dup2\n        /* \"BallotV2-J.sol\":1422:1433  sender.vote */\n      0x01\n      add\n      0x01\n        /* \"BallotV2-J.sol\":1422:1446  sender.vote = toProposal */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2-J.sol\":1492:1498  sender */\n      dup1\n        /* \"BallotV2-J.sol\":1492:1505  sender.weight */\n      0x00\n      add\n      sload\n        /* \"BallotV2-J.sol\":1457:1466  proposals */\n      0x02\n        /* \"BallotV2-J.sol\":1467:1477  toProposal */\n      dup4\n        /* \"BallotV2-J.sol\":1457:1478  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV2-J.sol\":1457:1488  proposals[toProposal].voteCount */\n      0x00\n      add\n      0x00\n        /* \"BallotV2-J.sol\":1457:1505  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV2-J.sol\":1538:1548  10 seconds */\n      0x0a\n        /* \"BallotV2-J.sol\":1527:1536  startTime */\n      sload(0x03)\n        /* \"BallotV2-J.sol\":1527:1548  startTime+ 10 seconds */\n      add\n        /* \"BallotV2-J.sol\":1520:1523  now */\n      timestamp\n        /* \"BallotV2-J.sol\":1520:1549  now > (startTime+ 10 seconds) */\n      gt\n        /* \"BallotV2-J.sol\":1516:1572  if (now > (startTime+ 10 seconds)) {stage = Stage.Done;} */\n      iszero\n      tag_40\n      jumpi\n        /* \"BallotV2-J.sol\":1560:1570  Stage.Done */\n      0x03\n        /* \"BallotV2-J.sol\":1552:1557  stage */\n      0x00\n      dup1\n        /* \"BallotV2-J.sol\":1552:1570  stage = Stage.Done */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_41\n      jumpi\n      invalid\n    tag_41:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV2-J.sol\":1516:1572  if (now > (startTime+ 10 seconds)) {stage = Stage.Done;} */\n    tag_40:\n        /* \"BallotV2-J.sol\":1221:1579  function vote(uint8 toProposal) public {\r... */\n      pop\n    tag_35:\n      pop\n      jump\t// out\n        /* \"BallotV2-J.sol\":304:335  Stage public stage = Stage.Init */\n    tag_16:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72305820916dec6922fc2f63aef2e3489b3e87a8dcdbacb5bc3c59057164d2c4583e605a64736f6c63430005090032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516106613803806106618339818101604052602081101561005657600080fd5b810190808051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816101229190610153565b5060016000806101000a81548160ff0219169083600381111561014157fe5b021790555042600381905550506101a6565b81548183558181111561017a57818360005260206000209182019101610179919061017f565b5b505050565b6101a391905b8082111561019f5760008082016000905550600101610185565b5090565b90565b6104ac806101b56000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634420e48614610051578063609ff1bd14610095578063b3f98adc146100b9578063c040e6b8146100ea575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610116565b005b61009d6102a7565b604051808260ff1660ff16815260200191505060405180910390f35b6100e8600480360360208110156100cf57600080fd5b81019080803560ff169060200190929190505050610353565b005b6100f2610465565b6040518082600381111561010257fe5b60ff16815260200191505060405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101bf5750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101c9576102a4565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156102a35760026000806101000a81548160ff0219169083600381111561029657fe5b0217905550426003819055505b5b50565b60006003808111156102b557fe5b6000809054906101000a900460ff1660038111156102cf57fe5b146102dc57809050610350565b600080905060008090505b6002805490508160ff16101561034d578160028260ff168154811061030857fe5b906000526020600020016000015411156103405760028160ff168154811061032c57fe5b906000526020600020016000015491508092505b80806001019150506102e7565b50505b90565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff16806103bb57506002805490508260ff1610155b156103c65750610462565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811061041557fe5b9060005260206000200160000160008282540192505081905550600a600354014211156104605760036000806101000a81548160ff0219169083600381111561045a57fe5b02179055505b505b50565b6000809054906101000a900460ff168156fea265627a7a72305820916dec6922fc2f63aef2e3489b3e87a8dcdbacb5bc3c59057164d2c4583e605a64736f6c63430005090032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x661 CODESIZE SUB DUP1 PUSH2 0x661 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x153 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x141 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x1A6 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x17A JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x17F JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x185 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x4AC DUP1 PUSH2 0x1B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1BF JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1C9 JUMPI PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x296 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2B5 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2CF JUMPI INVALID JUMPDEST EQ PUSH2 0x2DC JUMPI DUP1 SWAP1 POP PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x34D JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x308 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x340 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x32C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2E7 JUMP JUMPDEST POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x3BB JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x3C6 JUMPI POP PUSH2 0x462 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x415 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x460 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x45A JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 SWAP2 PUSH14 0xEC6922FC2F63AEF2E3489B3E87A8 0xdc 0xdb 0xac 0xb5 0xbc EXTCODECOPY MSIZE SDIV PUSH18 0x64D2C4583E605A64736F6C63430005090032 ",
							"sourceMap": "25:1993:0:-;;;325:10;304:31;;;;;;;;;;;;;;;;;;;;;;;;;;535:221;8:9:-1;5:2;;;30:1;27;20:12;5:2;535:221:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;535:221:0;;;;;;;;;;;;;;;;600:10;586:11;;:24;;;;;;;;;;;;;;;;;;650:1;621:6;:19;628:11;;;;;;;;;;;621:19;;;;;;;;;;;;;;;:26;;:30;;;;681:13;662:32;;:9;:32;;;;;:::i;:::-;;713:9;705:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;745:3;733:9;:15;;;;535:221;25:1993;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634420e48614610051578063609ff1bd14610095578063b3f98adc146100b9578063c040e6b8146100ea575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610116565b005b61009d6102a7565b604051808260ff1660ff16815260200191505060405180910390f35b6100e8600480360360208110156100cf57600080fd5b81019080803560ff169060200190929190505050610353565b005b6100f2610465565b6040518082600381111561010257fe5b60ff16815260200191505060405180910390f35b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101bf5750600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101c9576102a4565b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550600a600354014211156102a35760026000806101000a81548160ff0219169083600381111561029657fe5b0217905550426003819055505b5b50565b60006003808111156102b557fe5b6000809054906101000a900460ff1660038111156102cf57fe5b146102dc57809050610350565b600080905060008090505b6002805490508160ff16101561034d578160028260ff168154811061030857fe5b906000526020600020016000015411156103405760028160ff168154811061032c57fe5b906000526020600020016000015491508092505b80806001019150506102e7565b50505b90565b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff16806103bb57506002805490508260ff1610155b156103c65750610462565b60018160010160006101000a81548160ff021916908315150217905550818160010160016101000a81548160ff021916908360ff160217905550806000015460028360ff168154811061041557fe5b9060005260206000200160000160008282540192505081905550600a600354014211156104605760036000806101000a81548160ff0219169083600381111561045a57fe5b02179055505b505b50565b6000809054906101000a900460ff168156fea265627a7a72305820916dec6922fc2f63aef2e3489b3e87a8dcdbacb5bc3c59057164d2c4583e605a64736f6c63430005090032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x2A7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x353 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x465 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1BF JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1C9 JUMPI PUSH2 0x2A4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2A3 JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x296 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x2B5 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2CF JUMPI INVALID JUMPDEST EQ PUSH2 0x2DC JUMPI DUP1 SWAP1 POP PUSH2 0x350 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x34D JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x308 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x340 JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x32C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP3 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x2E7 JUMP JUMPDEST POP POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x3BB JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP3 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x3C6 JUMPI POP PUSH2 0x462 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP4 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x415 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0xA PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x460 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x45A JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 SWAP2 PUSH14 0xEC6922FC2F63AEF2E3489B3E87A8 0xdc 0xdb 0xac 0xb5 0xbc EXTCODECOPY MSIZE SDIV PUSH18 0x64D2C4583E605A64736F6C63430005090032 ",
							"sourceMap": "25:1993:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:1993:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;874:284;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;874:284:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1587:428;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1221:358;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1221:358:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;304:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;874:284;945:11;;;;;;;;;;;931:25;;:10;:25;;;;:50;;;;960:6;:15;967:7;960:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;931:50;927:63;;;983:7;;927:63;1025:1;1000:6;:15;1007:7;1000:15;;;;;;;;;;;;;;;:22;;:26;;;;1061:5;1037:6;:15;1044:7;1037:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1100:10;1089:9;;:21;1082:3;:29;1078:73;;;1122:10;1114:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1146:3;1134:9;:15;;;;1078:73;874:284;;:::o;1587:428::-;1635:22;1683:10;1674:19;;;;;;;;:5;;;;;;;;;;;:19;;;;;;;;;1670:51;;1703:16;1696:23;;;;1670:51;1731:24;1758:1;1731:28;;1775:10;1788:1;1775:14;;1770:238;1798:9;:16;;;;1791:4;:23;;;1770:238;;;1869:16;1841:9;1851:4;1841:15;;;;;;;;;;;;;;;;;:25;;;:44;1837:171;;;1925:9;1935:4;1925:15;;;;;;;;;;;;;;;;;:25;;;1906:44;;1988:4;1969:23;;1837:171;1816:6;;;;;;;1770:238;;;;1587:428;;;:::o;1221:358::-;1271:20;1294:6;:18;1301:10;1294:18;;;;;;;;;;;;;;;1271:41;;1327:6;:12;;;;;;;;;;;;:46;;;;1357:9;:16;;;;1343:10;:30;;;;1327:46;1323:59;;;1375:7;;;1323:59;1407:4;1392:6;:12;;;:19;;;;;;;;;;;;;;;;;;1436:10;1422:6;:11;;;:24;;;;;;;;;;;;;;;;;;1492:6;:13;;;1457:9;1467:10;1457:21;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1538:10;1527:9;;:21;1520:3;:29;1516:56;;;1560:10;1552:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1516:56;1221:358;;;:::o;304:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "239200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "81897",
								"stage()": "517",
								"vote(uint8)": "82711",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "MSTORE"
								},
								{
									"begin": 325,
									"end": 335,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "DUP1"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "EXP"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "DUP2"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "SLOAD"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "DUP2"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "MUL"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "NOT"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "AND"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "SWAP1"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "DUP4"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "DUP2"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "GT"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "ISZERO"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "JUMPI"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "INVALID"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "JUMPDEST"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "MUL"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "OR"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "SWAP1"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "SSTORE"
								},
								{
									"begin": 304,
									"end": 335,
									"name": "POP"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "POP"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "MLOAD"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "PUSHSIZE"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "CODESIZE"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "SUB"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "DUP1"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "PUSHSIZE"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "DUP4"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "CODECOPY"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "DUP2"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "DUP2"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "ADD"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "DUP2"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "ADD"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "SWAP1"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "DUP1"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "DUP1"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "MLOAD"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "SWAP1"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "ADD"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "SWAP1"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "SWAP3"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "SWAP2"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "SWAP1"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "POP"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "POP"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "POP"
								},
								{
									"begin": 600,
									"end": 610,
									"name": "CALLER"
								},
								{
									"begin": 586,
									"end": 597,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 586,
									"end": 597,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "EXP"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "DUP2"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "SLOAD"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "DUP2"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "MUL"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "NOT"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "AND"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "SWAP1"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "DUP4"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "AND"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "MUL"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "OR"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "SWAP1"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "SSTORE"
								},
								{
									"begin": 586,
									"end": 610,
									"name": "POP"
								},
								{
									"begin": 650,
									"end": 651,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "DUP1"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "SWAP1"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "SLOAD"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "SWAP1"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "EXP"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "SWAP1"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "DIV"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 628,
									"end": 639,
									"name": "AND"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "AND"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "AND"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "DUP2"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "MSTORE"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "ADD"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "SWAP1"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "DUP2"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "MSTORE"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "ADD"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 621,
									"end": 640,
									"name": "KECCAK256"
								},
								{
									"begin": 621,
									"end": 647,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 621,
									"end": 647,
									"name": "ADD"
								},
								{
									"begin": 621,
									"end": 651,
									"name": "DUP2"
								},
								{
									"begin": 621,
									"end": 651,
									"name": "SWAP1"
								},
								{
									"begin": 621,
									"end": 651,
									"name": "SSTORE"
								},
								{
									"begin": 621,
									"end": 651,
									"name": "POP"
								},
								{
									"begin": 681,
									"end": 694,
									"name": "DUP1"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "AND"
								},
								{
									"begin": 662,
									"end": 671,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "DUP2"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "SWAP2"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "SWAP1"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "JUMPDEST"
								},
								{
									"begin": 662,
									"end": 694,
									"name": "POP"
								},
								{
									"begin": 713,
									"end": 722,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 705,
									"end": 710,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 705,
									"end": 710,
									"name": "DUP1"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "EXP"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "DUP2"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "SLOAD"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "DUP2"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "MUL"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "NOT"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "AND"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "SWAP1"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "DUP4"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "DUP2"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "GT"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "ISZERO"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "JUMPI"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "INVALID"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "JUMPDEST"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "MUL"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "OR"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "SWAP1"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "SSTORE"
								},
								{
									"begin": 705,
									"end": 722,
									"name": "POP"
								},
								{
									"begin": 745,
									"end": 748,
									"name": "TIMESTAMP"
								},
								{
									"begin": 733,
									"end": 742,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 733,
									"end": 748,
									"name": "DUP2"
								},
								{
									"begin": 733,
									"end": 748,
									"name": "SWAP1"
								},
								{
									"begin": 733,
									"end": 748,
									"name": "SSTORE"
								},
								{
									"begin": 733,
									"end": 748,
									"name": "POP"
								},
								{
									"begin": 535,
									"end": 756,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SLOAD"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "MSTORE"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "KECCAK256"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2018,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72305820916dec6922fc2f63aef2e3489b3e87a8dcdbacb5bc3c59057164d2c4583e605a64736f6c63430005090032",
									".code": [
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "SHR"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2018,
											"name": "REVERT"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "JUMPDEST"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "DUP1"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "DUP2"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "ADD"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "SWAP1"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "DUP1"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "DUP1"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "AND"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "SWAP1"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "ADD"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "SWAP1"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "SWAP3"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "SWAP2"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "SWAP1"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "JUMPDEST"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "STOP"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "MLOAD"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "DUP1"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "DUP3"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "AND"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "AND"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "DUP2"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "MSTORE"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "ADD"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "SWAP2"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "MLOAD"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "DUP1"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "SWAP2"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "SUB"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "RETURN"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "JUMPDEST"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "DUP1"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "DUP2"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "ADD"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "DUP1"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "DUP1"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "AND"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "ADD"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "SWAP3"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "SWAP2"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "SWAP1"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "POP"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "POP"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "POP"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "JUMPDEST"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "STOP"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "MLOAD"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "DUP3"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "DUP2"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "GT"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "ISZERO"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "JUMPI"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "INVALID"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "AND"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "DUP2"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "MSTORE"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "ADD"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "POP"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "MLOAD"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "SWAP2"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "SUB"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "RETURN"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "JUMPDEST"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SWAP1"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SLOAD"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SWAP1"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "EXP"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "SWAP1"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "DIV"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 945,
											"end": 956,
											"name": "AND"
										},
										{
											"begin": 931,
											"end": 956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 956,
											"name": "AND"
										},
										{
											"begin": 931,
											"end": 941,
											"name": "CALLER"
										},
										{
											"begin": 931,
											"end": 956,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 931,
											"end": 956,
											"name": "AND"
										},
										{
											"begin": 931,
											"end": 956,
											"name": "EQ"
										},
										{
											"begin": 931,
											"end": 956,
											"name": "ISZERO"
										},
										{
											"begin": 931,
											"end": 981,
											"name": "DUP1"
										},
										{
											"begin": 931,
											"end": 981,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 931,
											"end": 981,
											"name": "JUMPI"
										},
										{
											"begin": 931,
											"end": 981,
											"name": "POP"
										},
										{
											"begin": 960,
											"end": 966,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 967,
											"end": 974,
											"name": "DUP3"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "AND"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "AND"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "DUP2"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "MSTORE"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "ADD"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "SWAP1"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "DUP2"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "MSTORE"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "ADD"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 960,
											"end": 975,
											"name": "KECCAK256"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "ADD"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "SWAP1"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "SLOAD"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "SWAP1"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "EXP"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "SWAP1"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "DIV"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 960,
											"end": 981,
											"name": "AND"
										},
										{
											"begin": 931,
											"end": 981,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 931,
											"end": 981,
											"name": "JUMPDEST"
										},
										{
											"begin": 927,
											"end": 990,
											"name": "ISZERO"
										},
										{
											"begin": 927,
											"end": 990,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 927,
											"end": 990,
											"name": "JUMPI"
										},
										{
											"begin": 983,
											"end": 990,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 983,
											"end": 990,
											"name": "JUMP"
										},
										{
											"begin": 927,
											"end": 990,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 927,
											"end": 990,
											"name": "JUMPDEST"
										},
										{
											"begin": 1025,
											"end": 1026,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP1"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1007,
											"end": 1014,
											"name": "DUP4"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "AND"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "AND"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "DUP2"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "MSTORE"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "ADD"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "DUP2"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "MSTORE"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "ADD"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1015,
											"name": "KECCAK256"
										},
										{
											"begin": 1000,
											"end": 1022,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1000,
											"end": 1022,
											"name": "ADD"
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "DUP2"
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "SWAP1"
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "SSTORE"
										},
										{
											"begin": 1000,
											"end": 1026,
											"name": "POP"
										},
										{
											"begin": 1061,
											"end": 1066,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1043,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1044,
											"end": 1051,
											"name": "DUP4"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "MSTORE"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1052,
											"name": "KECCAK256"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "ADD"
										},
										{
											"begin": 1037,
											"end": 1058,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "EXP"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "SLOAD"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "DUP2"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "MUL"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "NOT"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "AND"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "DUP4"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "ISZERO"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "ISZERO"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "MUL"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "OR"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "SWAP1"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "SSTORE"
										},
										{
											"begin": 1037,
											"end": 1066,
											"name": "POP"
										},
										{
											"begin": 1100,
											"end": 1110,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1089,
											"end": 1098,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1089,
											"end": 1098,
											"name": "SLOAD"
										},
										{
											"begin": 1089,
											"end": 1110,
											"name": "ADD"
										},
										{
											"begin": 1082,
											"end": 1085,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1082,
											"end": 1111,
											"name": "GT"
										},
										{
											"begin": 1078,
											"end": 1151,
											"name": "ISZERO"
										},
										{
											"begin": 1078,
											"end": 1151,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1078,
											"end": 1151,
											"name": "JUMPI"
										},
										{
											"begin": 1122,
											"end": 1132,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1114,
											"end": 1119,
											"name": "DUP1"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "EXP"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "DUP2"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "SLOAD"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "DUP2"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "MUL"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "NOT"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "AND"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "SWAP1"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "DUP4"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "DUP2"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "GT"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "ISZERO"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "JUMPI"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "INVALID"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "JUMPDEST"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "MUL"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "OR"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "SWAP1"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "SSTORE"
										},
										{
											"begin": 1114,
											"end": 1132,
											"name": "POP"
										},
										{
											"begin": 1146,
											"end": 1149,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1134,
											"end": 1143,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1134,
											"end": 1149,
											"name": "DUP2"
										},
										{
											"begin": 1134,
											"end": 1149,
											"name": "SWAP1"
										},
										{
											"begin": 1134,
											"end": 1149,
											"name": "SSTORE"
										},
										{
											"begin": 1134,
											"end": 1149,
											"name": "POP"
										},
										{
											"begin": 1078,
											"end": 1151,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1078,
											"end": 1151,
											"name": "JUMPDEST"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "JUMPDEST"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "POP"
										},
										{
											"begin": 874,
											"end": 1158,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1635,
											"end": 1657,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1693,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "DUP1"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "DUP2"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "GT"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "ISZERO"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "JUMPI"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "INVALID"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "JUMPDEST"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "DUP1"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "SWAP1"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "SLOAD"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "SWAP1"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "EXP"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "SWAP1"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "DIV"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1674,
											"end": 1679,
											"name": "AND"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "DUP2"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "GT"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "ISZERO"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "JUMPI"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "INVALID"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "JUMPDEST"
										},
										{
											"begin": 1674,
											"end": 1693,
											"name": "EQ"
										},
										{
											"begin": 1670,
											"end": 1721,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1670,
											"end": 1721,
											"name": "JUMPI"
										},
										{
											"begin": 1703,
											"end": 1719,
											"name": "DUP1"
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "SWAP1"
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "POP"
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1696,
											"end": 1719,
											"name": "JUMP"
										},
										{
											"begin": 1670,
											"end": 1721,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1670,
											"end": 1721,
											"name": "JUMPDEST"
										},
										{
											"begin": 1731,
											"end": 1755,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1758,
											"end": 1759,
											"name": "DUP1"
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "SWAP1"
										},
										{
											"begin": 1731,
											"end": 1759,
											"name": "POP"
										},
										{
											"begin": 1775,
											"end": 1785,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1789,
											"name": "DUP1"
										},
										{
											"begin": 1775,
											"end": 1789,
											"name": "SWAP1"
										},
										{
											"begin": 1775,
											"end": 1789,
											"name": "POP"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "JUMPDEST"
										},
										{
											"begin": 1798,
											"end": 1807,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "DUP1"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "SLOAD"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "SWAP1"
										},
										{
											"begin": 1798,
											"end": 1814,
											"name": "POP"
										},
										{
											"begin": 1791,
											"end": 1795,
											"name": "DUP2"
										},
										{
											"begin": 1791,
											"end": 1814,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1791,
											"end": 1814,
											"name": "AND"
										},
										{
											"begin": 1791,
											"end": 1814,
											"name": "LT"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "ISZERO"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "JUMPI"
										},
										{
											"begin": 1869,
											"end": 1885,
											"name": "DUP2"
										},
										{
											"begin": 1841,
											"end": 1850,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1851,
											"end": 1855,
											"name": "DUP3"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "AND"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "DUP2"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "SLOAD"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "DUP2"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "LT"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "JUMPI"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "INVALID"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "JUMPDEST"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "SWAP1"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "MSTORE"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "KECCAK256"
										},
										{
											"begin": 1841,
											"end": 1856,
											"name": "ADD"
										},
										{
											"begin": 1841,
											"end": 1866,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1841,
											"end": 1866,
											"name": "ADD"
										},
										{
											"begin": 1841,
											"end": 1866,
											"name": "SLOAD"
										},
										{
											"begin": 1841,
											"end": 1885,
											"name": "GT"
										},
										{
											"begin": 1837,
											"end": 2008,
											"name": "ISZERO"
										},
										{
											"begin": 1837,
											"end": 2008,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 1837,
											"end": 2008,
											"name": "JUMPI"
										},
										{
											"begin": 1925,
											"end": 1934,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1935,
											"end": 1939,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "AND"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "SLOAD"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "DUP2"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "LT"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "JUMPI"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "INVALID"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "JUMPDEST"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "SWAP1"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "MSTORE"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "KECCAK256"
										},
										{
											"begin": 1925,
											"end": 1940,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1950,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1925,
											"end": 1950,
											"name": "ADD"
										},
										{
											"begin": 1925,
											"end": 1950,
											"name": "SLOAD"
										},
										{
											"begin": 1906,
											"end": 1950,
											"name": "SWAP2"
										},
										{
											"begin": 1906,
											"end": 1950,
											"name": "POP"
										},
										{
											"begin": 1988,
											"end": 1992,
											"name": "DUP1"
										},
										{
											"begin": 1969,
											"end": 1992,
											"name": "SWAP3"
										},
										{
											"begin": 1969,
											"end": 1992,
											"name": "POP"
										},
										{
											"begin": 1837,
											"end": 2008,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 1837,
											"end": 2008,
											"name": "JUMPDEST"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP1"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "DUP1"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "ADD"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "SWAP2"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "POP"
										},
										{
											"begin": 1816,
											"end": 1822,
											"name": "POP"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "JUMP"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "JUMPDEST"
										},
										{
											"begin": 1770,
											"end": 2008,
											"name": "POP"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "POP"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "JUMPDEST"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "SWAP1"
										},
										{
											"begin": 1587,
											"end": 2015,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "JUMPDEST"
										},
										{
											"begin": 1271,
											"end": 1291,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1300,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1311,
											"name": "CALLER"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "AND"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "AND"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "MSTORE"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "ADD"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "DUP2"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "MSTORE"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "ADD"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1312,
											"name": "KECCAK256"
										},
										{
											"begin": 1271,
											"end": 1312,
											"name": "SWAP1"
										},
										{
											"begin": 1271,
											"end": 1312,
											"name": "POP"
										},
										{
											"begin": 1327,
											"end": 1333,
											"name": "DUP1"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "ADD"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "SWAP1"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "SLOAD"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "SWAP1"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "EXP"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "SWAP1"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "DIV"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1327,
											"end": 1339,
											"name": "AND"
										},
										{
											"begin": 1327,
											"end": 1373,
											"name": "DUP1"
										},
										{
											"begin": 1327,
											"end": 1373,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 1327,
											"end": 1373,
											"name": "JUMPI"
										},
										{
											"begin": 1327,
											"end": 1373,
											"name": "POP"
										},
										{
											"begin": 1357,
											"end": 1366,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1357,
											"end": 1373,
											"name": "DUP1"
										},
										{
											"begin": 1357,
											"end": 1373,
											"name": "SLOAD"
										},
										{
											"begin": 1357,
											"end": 1373,
											"name": "SWAP1"
										},
										{
											"begin": 1357,
											"end": 1373,
											"name": "POP"
										},
										{
											"begin": 1343,
											"end": 1353,
											"name": "DUP3"
										},
										{
											"begin": 1343,
											"end": 1373,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1343,
											"end": 1373,
											"name": "AND"
										},
										{
											"begin": 1343,
											"end": 1373,
											"name": "LT"
										},
										{
											"begin": 1343,
											"end": 1373,
											"name": "ISZERO"
										},
										{
											"begin": 1327,
											"end": 1373,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 1327,
											"end": 1373,
											"name": "JUMPDEST"
										},
										{
											"begin": 1323,
											"end": 1382,
											"name": "ISZERO"
										},
										{
											"begin": 1323,
											"end": 1382,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 1323,
											"end": 1382,
											"name": "JUMPI"
										},
										{
											"begin": 1375,
											"end": 1382,
											"name": "POP"
										},
										{
											"begin": 1375,
											"end": 1382,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 1375,
											"end": 1382,
											"name": "JUMP"
										},
										{
											"begin": 1323,
											"end": 1382,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 1323,
											"end": 1382,
											"name": "JUMPDEST"
										},
										{
											"begin": 1407,
											"end": 1411,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1392,
											"end": 1398,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "ADD"
										},
										{
											"begin": 1392,
											"end": 1404,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "EXP"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "SLOAD"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "DUP2"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "MUL"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "NOT"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "AND"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "DUP4"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "ISZERO"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "ISZERO"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "MUL"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "OR"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "SWAP1"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "SSTORE"
										},
										{
											"begin": 1392,
											"end": 1411,
											"name": "POP"
										},
										{
											"begin": 1436,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1422,
											"end": 1428,
											"name": "DUP2"
										},
										{
											"begin": 1422,
											"end": 1433,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1422,
											"end": 1433,
											"name": "ADD"
										},
										{
											"begin": 1422,
											"end": 1433,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "EXP"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SLOAD"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "MUL"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "NOT"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "AND"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "DUP4"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "AND"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "MUL"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "OR"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SSTORE"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1498,
											"name": "DUP1"
										},
										{
											"begin": 1492,
											"end": 1505,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1492,
											"end": 1505,
											"name": "ADD"
										},
										{
											"begin": 1492,
											"end": 1505,
											"name": "SLOAD"
										},
										{
											"begin": 1457,
											"end": 1466,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1467,
											"end": 1477,
											"name": "DUP4"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "AND"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "DUP2"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SLOAD"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "DUP2"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "LT"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "JUMPI"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "INVALID"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "JUMPDEST"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "SWAP1"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "MSTORE"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "KECCAK256"
										},
										{
											"begin": 1457,
											"end": 1478,
											"name": "ADD"
										},
										{
											"begin": 1457,
											"end": 1488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1488,
											"name": "ADD"
										},
										{
											"begin": 1457,
											"end": 1488,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "DUP3"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "DUP3"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "SLOAD"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "ADD"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "SWAP3"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "POP"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "POP"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "DUP2"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "SWAP1"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "SSTORE"
										},
										{
											"begin": 1457,
											"end": 1505,
											"name": "POP"
										},
										{
											"begin": 1538,
											"end": 1548,
											"name": "PUSH",
											"value": "A"
										},
										{
											"begin": 1527,
											"end": 1536,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1527,
											"end": 1536,
											"name": "SLOAD"
										},
										{
											"begin": 1527,
											"end": 1548,
											"name": "ADD"
										},
										{
											"begin": 1520,
											"end": 1523,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1520,
											"end": 1549,
											"name": "GT"
										},
										{
											"begin": 1516,
											"end": 1572,
											"name": "ISZERO"
										},
										{
											"begin": 1516,
											"end": 1572,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1572,
											"name": "JUMPI"
										},
										{
											"begin": 1560,
											"end": 1570,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1552,
											"end": 1557,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1557,
											"name": "DUP1"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "EXP"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "SLOAD"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "MUL"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "NOT"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "DUP4"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "GT"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "ISZERO"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "JUMPI"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "INVALID"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "JUMPDEST"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "MUL"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "OR"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "SSTORE"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "POP"
										},
										{
											"begin": 1516,
											"end": 1572,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 1516,
											"end": 1572,
											"name": "JUMPDEST"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "POP"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "JUMPDEST"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "POP"
										},
										{
											"begin": 1221,
											"end": 1579,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "JUMPDEST"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "DUP1"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "SLOAD"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "EXP"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "SWAP1"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "DIV"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "AND"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "DUP2"
										},
										{
											"begin": 304,
											"end": 335,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"constructor\":\"Create a new ballot with $(_numProposals) different proposals.\",\"register(address)\":{\"notice\":\"May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"BallotV2-J.sol\":\"Ballot\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotV2-J.sol\":{\"keccak256\":\"0x01229d1d2a50f58202ba8eb6b11f446da41e6aecb637717c5a0ab0bf5040df7f\",\"urls\":[\"bzzr://e9f917744cf94374f8302707f80c9f571a47fbac89091c13e28c2b374f28b8a3\",\"dweb:/ipfs/QmR1QsqG3G9gHQAHdfFSBjzLuvY9K2xxbiNtn18PoGnnji\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"constructor": "Create a new ballot with $(_numProposals) different proposals.",
							"register(address)": {
								"notice": "May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"sources": {
			"BallotV2-J.sol": {
				"ast": {
					"absolutePath": "BallotV2-J.sol",
					"exportedSymbols": {
						"Ballot": [
							217
						]
					},
					"id": 218,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 217,
							"linearizedBaseContracts": [
								217
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "74:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "74:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "96:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "96:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "117:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "117:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 217,
									"src": "50:115:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "198:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "198:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 217,
									"src": "171:88:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 16,
									"members": [
										{
											"id": 12,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "277:4:0"
										},
										{
											"id": 13,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "282:3:0"
										},
										{
											"id": 14,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "287:4:0"
										},
										{
											"id": 15,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "293:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "265:33:0"
								},
								{
									"constant": false,
									"id": 20,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "304:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$16",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 17,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 16,
										"src": "304:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 18,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "325:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "325:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "344:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "344:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "370:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "378:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "370:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 24,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "389:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "409:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 27,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "409:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 28,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "409:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 31,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 217,
									"src": "440:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 30,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "440:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "575:181:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 39,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 36,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "586:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 37,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "600:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 38,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "600:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "586:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 40,
												"nodeType": "ExpressionStatement",
												"src": "586:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "621:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 43,
															"indexExpression": {
																"argumentTypes": null,
																"id": 42,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "628:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "621:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 44,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "621:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "650:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "621:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "621:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 48,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "662:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 50,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "662:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 51,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "681:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "662:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "662:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "705:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 55,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "713:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "705:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "705:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 59,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "733:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "745:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "733:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "733:15:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 64,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "547:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 32,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "547:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "546:21:0"
									},
									"returnParameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "575:0:0"
									},
									"scope": 217,
									"src": "535:221:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "916:242:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 77,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 69,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "931:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "931:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 71,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "945:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "931:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 73,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "960:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 75,
															"indexExpression": {
																"argumentTypes": null,
																"id": 74,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "967:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "960:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "960:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "931:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 79,
												"nodeType": "IfStatement",
												"src": "927:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 68,
													"id": 78,
													"nodeType": "Return",
													"src": "983:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 80,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1000:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 82,
															"indexExpression": {
																"argumentTypes": null,
																"id": 81,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1007:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1000:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 83,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1000:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 84,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1025:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1000:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1000:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 87,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1037:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 89,
															"indexExpression": {
																"argumentTypes": null,
																"id": 88,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 66,
																"src": "1044:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1037:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 90,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1037:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 91,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1061:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1037:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "1037:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 94,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1082:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 95,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1089:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1100:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1089:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 98,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1088:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1082:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 110,
												"nodeType": "IfStatement",
												"src": "1078:73:0",
												"trueBody": {
													"id": 109,
													"nodeType": "Block",
													"src": "1113:38:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 100,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1114:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 101,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1122:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1122:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1114:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 104,
															"nodeType": "ExpressionStatement",
															"src": "1114:18:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 105,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1134:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 106,
																	"name": "now",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "1146:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1134:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 108,
															"nodeType": "ExpressionStatement",
															"src": "1134:15:0"
														}
													]
												}
											}
										]
									},
									"documentation": "May only be called by $(chairperson).",
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "892:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 65,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "891:17:0"
									},
									"returnParameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "916:0:0"
									},
									"scope": 217,
									"src": "874:284:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "1260:319:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 166,
														"src": "1271:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 117,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1271:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 123,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 119,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1294:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 122,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 120,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "1301:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1301:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1294:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1271:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 124,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1327:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 125,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1327:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 126,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "1343:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 127,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1357:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 128,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1357:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1343:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1327:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 132,
												"nodeType": "IfStatement",
												"src": "1323:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 116,
													"id": 131,
													"nodeType": "Return",
													"src": "1375:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 133,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1392:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1392:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1407:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1392:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "1392:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 139,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1422:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 141,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1422:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 142,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "1436:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1422:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1422:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 145,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1457:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 147,
															"indexExpression": {
																"argumentTypes": null,
																"id": 146,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "1467:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1457:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1457:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 149,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "1492:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 150,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1492:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1457:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "1457:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 153,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1520:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 154,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1527:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3130",
																	"id": 155,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1538:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"src": "1527:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 157,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1526:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1520:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 165,
												"nodeType": "IfStatement",
												"src": "1516:56:0",
												"trueBody": {
													"id": 164,
													"nodeType": "Block",
													"src": "1551:21:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 159,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1552:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 160,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1560:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1560:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1552:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 163,
															"nodeType": "ExpressionStatement",
															"src": "1552:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "1235:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 113,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1234:18:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1260:0:0"
									},
									"scope": 217,
									"src": "1221:358:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 215,
										"nodeType": "Block",
										"src": "1659:356:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 172,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1674:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 173,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "1683:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 174,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Done",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1683:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "1674:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 179,
												"nodeType": "IfStatement",
												"src": "1670:51:0",
												"trueBody": {
													"id": 178,
													"nodeType": "Block",
													"src": "1695:26:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 176,
																"name": "_winningProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 170,
																"src": "1703:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"functionReturnParameters": 171,
															"id": 177,
															"nodeType": "Return",
															"src": "1696:23:0"
														}
													]
												}
											},
											{
												"assignments": [
													181
												],
												"declarations": [
													{
														"constant": false,
														"id": 181,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 215,
														"src": "1731:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 180,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1758:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 195,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "1841:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 197,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 196,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 185,
																	"src": "1851:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1841:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "1841:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 181,
															"src": "1869:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1841:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 213,
													"nodeType": "IfStatement",
													"src": "1837:171:0",
													"trueBody": {
														"id": 212,
														"nodeType": "Block",
														"src": "1887:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 201,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 181,
																		"src": "1906:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 202,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "1925:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 204,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 203,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 185,
																				"src": "1935:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1925:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 205,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "1925:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1906:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 207,
																"nodeType": "ExpressionStatement",
																"src": "1906:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 208,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 170,
																		"src": "1969:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 209,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 185,
																		"src": "1988:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "1969:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 211,
																"nodeType": "ExpressionStatement",
																"src": "1969:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 188,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 185,
														"src": "1791:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 189,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1798:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 190,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1798:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1791:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 214,
												"initializationExpression": {
													"assignments": [
														185
													],
													"declarations": [
														{
															"constant": false,
															"id": 185,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 214,
															"src": "1775:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 184,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "1775:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 187,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 186,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1788:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1775:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1816:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 192,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 185,
															"src": "1816:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 194,
													"nodeType": "ExpressionStatement",
													"src": "1816:6:0"
												},
												"nodeType": "ForStatement",
												"src": "1770:238:0"
											}
										]
									},
									"documentation": null,
									"id": 216,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1611:2:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "1635:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 169,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1635:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1634:24:0"
									},
									"scope": 217,
									"src": "1587:428:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 218,
							"src": "25:1993:0"
						}
					],
					"src": "0:2018:0"
				},
				"id": 0
			}
		}
	}
}