{
	"id": "fd980027c2f2c45e3d037cad70b1a2c4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.9",
	"solcLongVersion": "0.5.9+commit.e560f70d",
	"input": {
		"language": "Solidity",
		"sources": {
			"BallotV3-J.sol": {
				"content": "pragma solidity ^0.5.9;\r\ncontract Ballot {\r\n\r\n    struct Voter {\r\n        uint weight;\r\n        bool voted;\r\n        uint8 vote;\r\n        //address delegate;\r\n    }\r\n    struct Proposal {\r\n        uint voteCount; // could add other data about proposal\r\n    }\r\n    enum Stage {Init,Reg, Vote, Done}\r\n    Stage public stage = Stage.Init;\r\n\r\n    address chairperson;\r\n    mapping(address => Voter) voters;\r\n    Proposal[] proposals;\r\n\r\n    event votingCompleted();\r\n\r\n    uint startTime;\r\n    //modifiers\r\n    modifier validStage(Stage reqStage)\r\n    { require(stage == reqStage);\r\n    _;\r\n    }\r\n\r\n\r\n    /// Create a new ballot with $(_numProposals) different proposals.\r\n    constructor(uint8 _numProposals) public  {\r\n        chairperson = msg.sender;\r\n        voters[chairperson].weight = 2;\r\n        proposals.length = _numProposals;\r\n        stage = Stage.Reg;\r\n        startTime = now;\r\n    }\r\n\r\n    /// Give $(toVoter) the right to vote on this ballot.\r\n    /// May only be called by $(chairperson).\r\n    function register(address toVoter) public validStage(Stage.Reg) {\r\n        //if (stage != Stage.Reg) {return;}\r\n        if (msg.sender != chairperson || voters[toVoter].voted) return;\r\n        voters[toVoter].weight = 1;\r\n        voters[toVoter].voted = false; \r\n        if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; }\r\n    }\r\n\r\n    /// Give a single vote to proposal $(toProposal).\r\n    function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r\n        // if (stage != Stage.Vote) {return;}\r\n        Voter storage sender = voters[msg.sender];\r\n        if (sender.voted || toProposal >= proposals.length) return;\r\n        sender.voted = true;\r\n        sender.vote = toProposal;\r\n        proposals[toProposal].voteCount += sender.weight;\r\n        if (now > (startTime+ 59 seconds)) {stage = Stage.Done; emit votingCompleted();}\r\n\r\n    }\r\n\r\n    function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal) {\r\n        //if(stage != Stage.Done) {return;}\r\n        uint256 winningVoteCount = 0;\r\n        for (uint8 prop = 0; prop < proposals.length; prop++)\r\n            if (proposals[prop].voteCount > winningVoteCount) {\r\n                winningVoteCount = proposals[prop].voteCount;\r\n                _winningProposal = prop;\r\n            }\r\n            assert (winningVoteCount > 0);\r\n            \r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"BallotV3-J.sol": {
				"Ballot": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "toVoter",
									"type": "address"
								}
							],
							"name": "register",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "winningProposal",
							"outputs": [
								{
									"name": "_winningProposal",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "toProposal",
									"type": "uint8"
								}
							],
							"name": "vote",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "stage",
							"outputs": [
								{
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"name": "_numProposals",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [],
							"name": "votingCompleted",
							"type": "event"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"BallotV3-J.sol\":25:2367  contract Ballot {\r... */\n  mstore(0x40, 0x80)\n    /* \"BallotV3-J.sol\":324:334  Stage.Init */\n  0x00\n    /* \"BallotV3-J.sol\":303:334  Stage public stage = Stage.Init */\n  dup1\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV3-J.sol\":674:896  constructor(uint8 _numProposals) public  {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_2:\n    /* \"BallotV3-J.sol\":674:896  constructor(uint8 _numProposals) public  {\r... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":13:15   */\n  0x20\n    /* \"--CODEGEN--\":8:11   */\n  dup2\n    /* \"--CODEGEN--\":5:16   */\n  lt\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_3\n  jumpi\n    /* \"--CODEGEN--\":29:30   */\n  0x00\n    /* \"--CODEGEN--\":26:27   */\n  dup1\n    /* \"--CODEGEN--\":19:31   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_3:\n    /* \"BallotV3-J.sol\":674:896  constructor(uint8 _numProposals) public  {\r... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"BallotV3-J.sol\":740:750  msg.sender */\n  caller\n    /* \"BallotV3-J.sol\":726:737  chairperson */\n  0x00\n  0x01\n    /* \"BallotV3-J.sol\":726:750  chairperson = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV3-J.sol\":790:791  2 */\n  0x02\n    /* \"BallotV3-J.sol\":761:767  voters */\n  0x01\n    /* \"BallotV3-J.sol\":761:780  voters[chairperson] */\n  0x00\n    /* \"BallotV3-J.sol\":768:779  chairperson */\n  dup1\n  0x01\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"BallotV3-J.sol\":761:780  voters[chairperson] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"BallotV3-J.sol\":761:787  voters[chairperson].weight */\n  0x00\n  add\n    /* \"BallotV3-J.sol\":761:791  voters[chairperson].weight = 2 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV3-J.sol\":821:834  _numProposals */\n  dup1\n    /* \"BallotV3-J.sol\":802:834  proposals.length = _numProposals */\n  0xff\n  and\n    /* \"BallotV3-J.sol\":802:811  proposals */\n  0x02\n    /* \"BallotV3-J.sol\":802:834  proposals.length = _numProposals */\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"BallotV3-J.sol\":853:862  Stage.Reg */\n  0x01\n    /* \"BallotV3-J.sol\":845:850  stage */\n  0x00\n  dup1\n    /* \"BallotV3-J.sol\":845:862  stage = Stage.Reg */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_8\n  jumpi\n  invalid\ntag_8:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"BallotV3-J.sol\":885:888  now */\n  timestamp\n    /* \"BallotV3-J.sol\":873:882  startTime */\n  0x03\n    /* \"BallotV3-J.sol\":873:888  startTime = now */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"BallotV3-J.sol\":674:896  constructor(uint8 _numProposals) public  {\r... */\n  pop\n    /* \"BallotV3-J.sol\":25:2367  contract Ballot {\r... */\n  jump(tag_9)\ntag_7:\n  dup2\n  sload\n  dup2\n  dup4\n  sstore\n  dup2\n  dup2\n  gt\n  iszero\n  tag_10\n  jumpi\n  dup2\n  dup4\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap2\n  dup3\n  add\n  swap2\n  add\n  tag_11\n  swap2\n  swap1\n  tag_12\n  jump\t// in\ntag_11:\ntag_10:\n  pop\n  pop\n  pop\n  jump\t// out\ntag_12:\n  tag_13\n  swap2\n  swap1\ntag_14:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_15\n  jumpi\n  0x00\n  dup1\n  dup3\n  add\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_14)\ntag_15:\n  pop\n  swap1\n  jump\ntag_13:\n  swap1\n  jump\t// out\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"BallotV3-J.sol\":25:2367  contract Ballot {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"BallotV3-J.sol\":25:2367  contract Ballot {\r... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4420e486\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x609ff1bd\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xb3f98adc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xc040e6b8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"BallotV3-J.sol\":1010:1345  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n    tag_3:\n      tag_7\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_8\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_8:\n        /* \"BallotV3-J.sol\":1010:1345  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_9\n      jump\t// in\n    tag_7:\n      stop\n        /* \"BallotV3-J.sol\":1871:2364  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal) {\r... */\n    tag_4:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      dup3\n      0xff\n      and\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV3-J.sol\":1408:1863  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n    tag_5:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_13:\n        /* \"BallotV3-J.sol\":1408:1863  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_14\n      jump\t// in\n    tag_12:\n      stop\n        /* \"BallotV3-J.sol\":303:334  Stage public stage = Stage.Init */\n    tag_6:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_17\n      jumpi\n      invalid\n    tag_17:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"BallotV3-J.sol\":1010:1345  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n    tag_9:\n        /* \"BallotV3-J.sol\":1063:1072  Stage.Reg */\n      0x01\n        /* \"BallotV3-J.sol\":567:575  reqStage */\n      dup1\n        /* \"BallotV3-J.sol\":558:575  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_19\n      jumpi\n      invalid\n    tag_19:\n        /* \"BallotV3-J.sol\":558:563  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3-J.sol\":558:575  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_20\n      jumpi\n      invalid\n    tag_20:\n      eq\n        /* \"BallotV3-J.sol\":550:576  require(stage == reqStage) */\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n        /* \"BallotV3-J.sol\":1148:1159  chairperson */\n      0x00\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV3-J.sol\":1134:1159  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"BallotV3-J.sol\":1134:1144  msg.sender */\n      caller\n        /* \"BallotV3-J.sol\":1134:1159  msg.sender != chairperson */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"BallotV3-J.sol\":1134:1184  msg.sender != chairperson || voters[toVoter].voted */\n      dup1\n      tag_23\n      jumpi\n      pop\n        /* \"BallotV3-J.sol\":1163:1169  voters */\n      0x01\n        /* \"BallotV3-J.sol\":1163:1178  voters[toVoter] */\n      0x00\n        /* \"BallotV3-J.sol\":1170:1177  toVoter */\n      dup4\n        /* \"BallotV3-J.sol\":1163:1178  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV3-J.sol\":1163:1184  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3-J.sol\":1134:1184  msg.sender != chairperson || voters[toVoter].voted */\n    tag_23:\n        /* \"BallotV3-J.sol\":1130:1193  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n      iszero\n      tag_24\n      jumpi\n        /* \"BallotV3-J.sol\":1186:1193  return; */\n      jump(tag_22)\n        /* \"BallotV3-J.sol\":1130:1193  if (msg.sender != chairperson || voters[toVoter].voted) return; */\n    tag_24:\n        /* \"BallotV3-J.sol\":1228:1229  1 */\n      0x01\n        /* \"BallotV3-J.sol\":1203:1209  voters */\n      dup1\n        /* \"BallotV3-J.sol\":1203:1218  voters[toVoter] */\n      0x00\n        /* \"BallotV3-J.sol\":1210:1217  toVoter */\n      dup5\n        /* \"BallotV3-J.sol\":1203:1218  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV3-J.sol\":1203:1225  voters[toVoter].weight */\n      0x00\n      add\n        /* \"BallotV3-J.sol\":1203:1229  voters[toVoter].weight = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV3-J.sol\":1264:1269  false */\n      0x00\n        /* \"BallotV3-J.sol\":1240:1246  voters */\n      0x01\n        /* \"BallotV3-J.sol\":1240:1255  voters[toVoter] */\n      0x00\n        /* \"BallotV3-J.sol\":1247:1254  toVoter */\n      dup5\n        /* \"BallotV3-J.sol\":1240:1255  voters[toVoter] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV3-J.sol\":1240:1261  voters[toVoter].voted */\n      0x01\n      add\n      0x00\n        /* \"BallotV3-J.sol\":1240:1269  voters[toVoter].voted = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV3-J.sol\":1303:1313  30 seconds */\n      0x1e\n        /* \"BallotV3-J.sol\":1292:1301  startTime */\n      sload(0x03)\n        /* \"BallotV3-J.sol\":1292:1313  startTime+ 30 seconds */\n      add\n        /* \"BallotV3-J.sol\":1285:1288  now */\n      timestamp\n        /* \"BallotV3-J.sol\":1285:1314  now > (startTime+ 30 seconds) */\n      gt\n        /* \"BallotV3-J.sol\":1281:1338  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n      iszero\n      tag_25\n      jumpi\n        /* \"BallotV3-J.sol\":1325:1335  Stage.Vote */\n      0x02\n        /* \"BallotV3-J.sol\":1317:1322  stage */\n      0x00\n      dup1\n        /* \"BallotV3-J.sol\":1317:1335  stage = Stage.Vote */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV3-J.sol\":1281:1338  if (now > (startTime+ 30 seconds)) {stage = Stage.Vote; } */\n    tag_25:\n        /* \"BallotV3-J.sol\":583:584  _ */\n    tag_22:\n        /* \"BallotV3-J.sol\":1010:1345  function register(address toVoter) public validStage(Stage.Reg) {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV3-J.sol\":1871:2364  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal) {\r... */\n    tag_11:\n        /* \"BallotV3-J.sol\":1942:1964  uint8 _winningProposal */\n      0x00\n        /* \"BallotV3-J.sol\":1916:1926  Stage.Done */\n      0x03\n        /* \"BallotV3-J.sol\":567:575  reqStage */\n      dup1\n        /* \"BallotV3-J.sol\":558:575  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_28\n      jumpi\n      invalid\n    tag_28:\n        /* \"BallotV3-J.sol\":558:563  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3-J.sol\":558:575  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      eq\n        /* \"BallotV3-J.sol\":550:576  require(stage == reqStage) */\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n        /* \"BallotV3-J.sol\":2022:2046  uint256 winningVoteCount */\n      0x00\n        /* \"BallotV3-J.sol\":2049:2050  0 */\n      dup1\n        /* \"BallotV3-J.sol\":2022:2050  uint256 winningVoteCount = 0 */\n      swap1\n      pop\n        /* \"BallotV3-J.sol\":2066:2076  uint8 prop */\n      0x00\n        /* \"BallotV3-J.sol\":2079:2080  0 */\n      dup1\n        /* \"BallotV3-J.sol\":2066:2080  uint8 prop = 0 */\n      swap1\n      pop\n        /* \"BallotV3-J.sol\":2061:2299  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n    tag_32:\n        /* \"BallotV3-J.sol\":2089:2098  proposals */\n      0x02\n        /* \"BallotV3-J.sol\":2089:2105  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV3-J.sol\":2082:2086  prop */\n      dup2\n        /* \"BallotV3-J.sol\":2082:2105  prop < proposals.length */\n      0xff\n      and\n      lt\n        /* \"BallotV3-J.sol\":2061:2299  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      iszero\n      tag_33\n      jumpi\n        /* \"BallotV3-J.sol\":2160:2176  winningVoteCount */\n      dup2\n        /* \"BallotV3-J.sol\":2132:2141  proposals */\n      0x02\n        /* \"BallotV3-J.sol\":2142:2146  prop */\n      dup3\n        /* \"BallotV3-J.sol\":2132:2147  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_35\n      jumpi\n      invalid\n    tag_35:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV3-J.sol\":2132:2157  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV3-J.sol\":2132:2176  proposals[prop].voteCount > winningVoteCount */\n      gt\n        /* \"BallotV3-J.sol\":2128:2299  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n      iszero\n      tag_37\n      jumpi\n        /* \"BallotV3-J.sol\":2216:2225  proposals */\n      0x02\n        /* \"BallotV3-J.sol\":2226:2230  prop */\n      dup2\n        /* \"BallotV3-J.sol\":2216:2231  proposals[prop] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_38\n      jumpi\n      invalid\n    tag_38:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV3-J.sol\":2216:2241  proposals[prop].voteCount */\n      0x00\n      add\n      sload\n        /* \"BallotV3-J.sol\":2197:2241  winningVoteCount = proposals[prop].voteCount */\n      swap2\n      pop\n        /* \"BallotV3-J.sol\":2279:2283  prop */\n      dup1\n        /* \"BallotV3-J.sol\":2260:2283  _winningProposal = prop */\n      swap4\n      pop\n        /* \"BallotV3-J.sol\":2128:2299  if (proposals[prop].voteCount > winningVoteCount) {\r... */\n    tag_37:\n        /* \"BallotV3-J.sol\":2107:2113  prop++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"BallotV3-J.sol\":2061:2299  for (uint8 prop = 0; prop < proposals.length; prop++)\r... */\n      jump(tag_32)\n    tag_33:\n      pop\n        /* \"BallotV3-J.sol\":2340:2341  0 */\n      0x00\n        /* \"BallotV3-J.sol\":2321:2337  winningVoteCount */\n      dup2\n        /* \"BallotV3-J.sol\":2321:2341  winningVoteCount > 0 */\n      gt\n        /* \"BallotV3-J.sol\":2313:2342  assert (winningVoteCount > 0) */\n      tag_40\n      jumpi\n      invalid\n    tag_40:\n        /* \"BallotV3-J.sol\":583:584  _ */\n      pop\n        /* \"BallotV3-J.sol\":1871:2364  function winningProposal() public validStage(Stage.Done) view returns (uint8 _winningProposal) {\r... */\n      pop\n      swap1\n      jump\t// out\n        /* \"BallotV3-J.sol\":1408:1863  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n    tag_14:\n        /* \"BallotV3-J.sol\":1458:1468  Stage.Vote */\n      0x02\n        /* \"BallotV3-J.sol\":567:575  reqStage */\n      dup1\n        /* \"BallotV3-J.sol\":558:575  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_42\n      jumpi\n      invalid\n    tag_42:\n        /* \"BallotV3-J.sol\":558:563  stage */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3-J.sol\":558:575  stage == reqStage */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_43\n      jumpi\n      invalid\n    tag_43:\n      eq\n        /* \"BallotV3-J.sol\":550:576  require(stage == reqStage) */\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n        /* \"BallotV3-J.sol\":1529:1549  Voter storage sender */\n      0x00\n        /* \"BallotV3-J.sol\":1552:1558  voters */\n      0x01\n        /* \"BallotV3-J.sol\":1552:1570  voters[msg.sender] */\n      0x00\n        /* \"BallotV3-J.sol\":1559:1569  msg.sender */\n      caller\n        /* \"BallotV3-J.sol\":1552:1570  voters[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"BallotV3-J.sol\":1529:1570  Voter storage sender = voters[msg.sender] */\n      swap1\n      pop\n        /* \"BallotV3-J.sol\":1585:1591  sender */\n      dup1\n        /* \"BallotV3-J.sol\":1585:1597  sender.voted */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"BallotV3-J.sol\":1585:1631  sender.voted || toProposal >= proposals.length */\n      dup1\n      tag_46\n      jumpi\n      pop\n        /* \"BallotV3-J.sol\":1615:1624  proposals */\n      0x02\n        /* \"BallotV3-J.sol\":1615:1631  proposals.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"BallotV3-J.sol\":1601:1611  toProposal */\n      dup4\n        /* \"BallotV3-J.sol\":1601:1631  toProposal >= proposals.length */\n      0xff\n      and\n      lt\n      iszero\n        /* \"BallotV3-J.sol\":1585:1631  sender.voted || toProposal >= proposals.length */\n    tag_46:\n        /* \"BallotV3-J.sol\":1581:1640  if (sender.voted || toProposal >= proposals.length) return; */\n      iszero\n      tag_47\n      jumpi\n        /* \"BallotV3-J.sol\":1633:1640  return; */\n      pop\n      jump(tag_45)\n        /* \"BallotV3-J.sol\":1581:1640  if (sender.voted || toProposal >= proposals.length) return; */\n    tag_47:\n        /* \"BallotV3-J.sol\":1665:1669  true */\n      0x01\n        /* \"BallotV3-J.sol\":1650:1656  sender */\n      dup2\n        /* \"BallotV3-J.sol\":1650:1662  sender.voted */\n      0x01\n      add\n      0x00\n        /* \"BallotV3-J.sol\":1650:1669  sender.voted = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV3-J.sol\":1694:1704  toProposal */\n      dup3\n        /* \"BallotV3-J.sol\":1680:1686  sender */\n      dup2\n        /* \"BallotV3-J.sol\":1680:1691  sender.vote */\n      0x01\n      add\n      0x01\n        /* \"BallotV3-J.sol\":1680:1704  sender.vote = toProposal */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV3-J.sol\":1750:1756  sender */\n      dup1\n        /* \"BallotV3-J.sol\":1750:1763  sender.weight */\n      0x00\n      add\n      sload\n        /* \"BallotV3-J.sol\":1715:1724  proposals */\n      0x02\n        /* \"BallotV3-J.sol\":1725:1735  toProposal */\n      dup5\n        /* \"BallotV3-J.sol\":1715:1736  proposals[toProposal] */\n      0xff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_48\n      jumpi\n      invalid\n    tag_48:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"BallotV3-J.sol\":1715:1746  proposals[toProposal].voteCount */\n      0x00\n      add\n      0x00\n        /* \"BallotV3-J.sol\":1715:1763  proposals[toProposal].voteCount += sender.weight */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"BallotV3-J.sol\":1796:1806  59 seconds */\n      0x3b\n        /* \"BallotV3-J.sol\":1785:1794  startTime */\n      sload(0x03)\n        /* \"BallotV3-J.sol\":1785:1806  startTime+ 59 seconds */\n      add\n        /* \"BallotV3-J.sol\":1778:1781  now */\n      timestamp\n        /* \"BallotV3-J.sol\":1778:1807  now > (startTime+ 59 seconds) */\n      gt\n        /* \"BallotV3-J.sol\":1774:1854  if (now > (startTime+ 59 seconds)) {stage = Stage.Done; emit votingCompleted();} */\n      iszero\n      tag_50\n      jumpi\n        /* \"BallotV3-J.sol\":1818:1828  Stage.Done */\n      0x03\n        /* \"BallotV3-J.sol\":1810:1815  stage */\n      0x00\n      dup1\n        /* \"BallotV3-J.sol\":1810:1828  stage = Stage.Done */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_51\n      jumpi\n      invalid\n    tag_51:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"BallotV3-J.sol\":1835:1852  votingCompleted() */\n      0x6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef035382351\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"BallotV3-J.sol\":1774:1854  if (now > (startTime+ 59 seconds)) {stage = Stage.Done; emit votingCompleted();} */\n    tag_50:\n        /* \"BallotV3-J.sol\":583:584  _ */\n      pop\n    tag_45:\n        /* \"BallotV3-J.sol\":1408:1863  function vote(uint8 toProposal) public validStage(Stage.Vote)  {\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"BallotV3-J.sol\":303:334  Stage public stage = Stage.Init */\n    tag_16:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa265627a7a72305820c8bc698aaa0828611c6ecd09c447d43512e1c87fb16a3f908501c6ef1909e91d64736f6c63430005090032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405260008060006101000a81548160ff0219169083600381111561002257fe5b021790555034801561003357600080fd5b506040516106f53803806106f58339818101604052602081101561005657600080fd5b810190808051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506002600160008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055508060ff166002816101229190610153565b5060016000806101000a81548160ff0219169083600381111561014157fe5b021790555042600381905550506101a6565b81548183558181111561017a57818360005260206000209182019101610179919061017f565b5b505050565b6101a391905b8082111561019f5760008082016000905550600101610185565b5090565b90565b610540806101b56000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634420e48614610051578063609ff1bd14610095578063b3f98adc146100b9578063c040e6b8146100ea575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610116565b005b61009d6102d3565b604051808260ff1660ff16815260200191505060405180910390f35b6100e8600480360360208110156100cf57600080fd5b81019080803560ff169060200190929190505050610388565b005b6100f26104f9565b6040518082600381111561010257fe5b60ff16815260200191505060405180910390f35b600180600381111561012457fe5b6000809054906101000a900460ff16600381111561013e57fe5b1461014857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101f15750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101fb576102cf565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102ce5760026000806101000a81548160ff021916908360038111156102c857fe5b02179055505b5b5050565b600060038060038111156102e357fe5b6000809054906101000a900460ff1660038111156102fd57fe5b1461030757600080fd5b600080905060008090505b6002805490508160ff161015610378578160028260ff168154811061033357fe5b9060005260206000200160000154111561036b5760028160ff168154811061035757fe5b906000526020600020016000015491508093505b8080600101915050610312565b506000811161038357fe5b505090565b600280600381111561039657fe5b6000809054906101000a900460ff1660038111156103b057fe5b146103ba57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061042257506002805490508360ff1610155b1561042d57506104f5565b60018160010160006101000a81548160ff021916908315150217905550828160010160016101000a81548160ff021916908360ff160217905550806000015460028460ff168154811061047c57fe5b9060005260206000200160000160008282540192505081905550603b600354014211156104f35760036000806101000a81548160ff021916908360038111156104c157fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b505b5050565b6000809054906101000a900460ff168156fea265627a7a72305820c8bc698aaa0828611c6ecd09c447d43512e1c87fb16a3f908501c6ef1909e91d64736f6c63430005090032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x22 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x6F5 CODESIZE SUB DUP1 PUSH2 0x6F5 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x56 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP CALLER PUSH1 0x0 PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x2 PUSH1 0x1 PUSH1 0x0 DUP1 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xFF AND PUSH1 0x2 DUP2 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x153 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x141 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP PUSH2 0x1A6 JUMP JUMPDEST DUP2 SLOAD DUP2 DUP4 SSTORE DUP2 DUP2 GT ISZERO PUSH2 0x17A JUMPI DUP2 DUP4 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x17F JUMP JUMPDEST JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1A3 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 DUP3 ADD PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x185 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x540 DUP1 PUSH2 0x1B5 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13E JUMPI INVALID JUMPDEST EQ PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1F1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1FB JUMPI PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2E3 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2FD JUMPI INVALID JUMPDEST EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x378 JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x333 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x357 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x312 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH2 0x383 JUMPI INVALID JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x396 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B0 JUMPI INVALID JUMPDEST EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x422 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x42D JUMPI POP PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x47C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3B PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4C1 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xc8 0xbc PUSH10 0x8AAA0828611C6ECD09C4 0x47 0xd4 CALLDATALOAD SLT 0xe1 0xc8 PUSH32 0xB16A3F908501C6EF1909E91D64736F6C63430005090032000000000000000000 ",
							"sourceMap": "25:2342:0:-;;;324:10;303:31;;;;;;;;;;;;;;;;;;;;;;;;;;674:222;8:9:-1;5:2;;;30:1;27;20:12;5:2;674:222:0;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;674:222:0;;;;;;;;;;;;;;;;740:10;726:11;;:24;;;;;;;;;;;;;;;;;;790:1;761:6;:19;768:11;;;;;;;;;;;761:19;;;;;;;;;;;;;;;:26;;:30;;;;821:13;802:32;;:9;:32;;;;;:::i;:::-;;853:9;845:5;;:17;;;;;;;;;;;;;;;;;;;;;;;;885:3;873:9;:15;;;;674:222;25:2342;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80634420e48614610051578063609ff1bd14610095578063b3f98adc146100b9578063c040e6b8146100ea575b600080fd5b6100936004803603602081101561006757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610116565b005b61009d6102d3565b604051808260ff1660ff16815260200191505060405180910390f35b6100e8600480360360208110156100cf57600080fd5b81019080803560ff169060200190929190505050610388565b005b6100f26104f9565b6040518082600381111561010257fe5b60ff16815260200191505060405180910390f35b600180600381111561012457fe5b6000809054906101000a900460ff16600381111561013e57fe5b1461014857600080fd5b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415806101f15750600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900460ff165b156101fb576102cf565b60018060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160006101000a81548160ff021916908315150217905550601e600354014211156102ce5760026000806101000a81548160ff021916908360038111156102c857fe5b02179055505b5b5050565b600060038060038111156102e357fe5b6000809054906101000a900460ff1660038111156102fd57fe5b1461030757600080fd5b600080905060008090505b6002805490508160ff161015610378578160028260ff168154811061033357fe5b9060005260206000200160000154111561036b5760028160ff168154811061035757fe5b906000526020600020016000015491508093505b8080600101915050610312565b506000811161038357fe5b505090565b600280600381111561039657fe5b6000809054906101000a900460ff1660038111156103b057fe5b146103ba57600080fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508060010160009054906101000a900460ff168061042257506002805490508360ff1610155b1561042d57506104f5565b60018160010160006101000a81548160ff021916908315150217905550828160010160016101000a81548160ff021916908360ff160217905550806000015460028460ff168154811061047c57fe5b9060005260206000200160000160008282540192505081905550603b600354014211156104f35760036000806101000a81548160ff021916908360038111156104c157fe5b02179055507f6ac0c89219f0135e3a87cecdf1851abced71da933a0a00e1eada0ef03538235160405160405180910390a15b505b5050565b6000809054906101000a900460ff168156fea265627a7a72305820c8bc698aaa0828611c6ecd09c447d43512e1c87fb16a3f908501c6ef1909e91d64736f6c63430005090032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4420E486 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x609FF1BD EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3F98ADC EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0xC040E6B8 EQ PUSH2 0xEA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x116 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x9D PUSH2 0x2D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0xFF AND PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE8 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xCF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH1 0xFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x388 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF2 PUSH2 0x4F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x102 JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x124 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x13E JUMPI INVALID JUMPDEST EQ PUSH2 0x148 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 PUSH2 0x1F1 JUMPI POP PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST ISZERO PUSH2 0x1FB JUMPI PUSH2 0x2CF JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1E PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x2CE JUMPI PUSH1 0x2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2C8 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2E3 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x2FD JUMPI INVALID JUMPDEST EQ PUSH2 0x307 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 POP PUSH1 0x0 DUP1 SWAP1 POP JUMPDEST PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP2 PUSH1 0xFF AND LT ISZERO PUSH2 0x378 JUMPI DUP2 PUSH1 0x2 DUP3 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x333 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD GT ISZERO PUSH2 0x36B JUMPI PUSH1 0x2 DUP2 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x357 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD SLOAD SWAP2 POP DUP1 SWAP4 POP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x312 JUMP JUMPDEST POP PUSH1 0x0 DUP2 GT PUSH2 0x383 JUMPI INVALID JUMPDEST POP POP SWAP1 JUMP JUMPDEST PUSH1 0x2 DUP1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x396 JUMPI INVALID JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B0 JUMPI INVALID JUMPDEST EQ PUSH2 0x3BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x422 JUMPI POP PUSH1 0x2 DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0xFF AND LT ISZERO JUMPDEST ISZERO PUSH2 0x42D JUMPI POP PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x0 ADD SLOAD PUSH1 0x2 DUP5 PUSH1 0xFF AND DUP2 SLOAD DUP2 LT PUSH2 0x47C JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x3B PUSH1 0x3 SLOAD ADD TIMESTAMP GT ISZERO PUSH2 0x4F3 JUMPI PUSH1 0x3 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4C1 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP PUSH32 0x6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH6 0x627A7A723058 KECCAK256 0xc8 0xbc PUSH10 0x8AAA0828611C6ECD09C4 0x47 0xd4 CALLDATALOAD SLT 0xe1 0xc8 PUSH32 0xB16A3F908501C6EF1909E91D64736F6C63430005090032000000000000000000 ",
							"sourceMap": "25:2342:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;25:2342:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:335;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1010:335:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1871:493;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1408:455;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1408:455:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;303:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:335;1063:9;567:8;558:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;550:26;;;;;;1148:11;;;;;;;;;;;1134:25;;:10;:25;;;;:50;;;;1163:6;:15;1170:7;1163:15;;;;;;;;;;;;;;;:21;;;;;;;;;;;;1134:50;1130:63;;;1186:7;;1130:63;1228:1;1203:6;:15;1210:7;1203:15;;;;;;;;;;;;;;;:22;;:26;;;;1264:5;1240:6;:15;1247:7;1240:15;;;;;;;;;;;;;;;:21;;;:29;;;;;;;;;;;;;;;;;;1303:10;1292:9;;:21;1285:3;:29;1281:57;;;1325:10;1317:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1281:57;583:1;1010:335;;:::o;1871:493::-;1942:22;1916:10;567:8;558:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;550:26;;;;;;2022:24;2049:1;2022:28;;2066:10;2079:1;2066:14;;2061:238;2089:9;:16;;;;2082:4;:23;;;2061:238;;;2160:16;2132:9;2142:4;2132:15;;;;;;;;;;;;;;;;;:25;;;:44;2128:171;;;2216:9;2226:4;2216:15;;;;;;;;;;;;;;;;;:25;;;2197:44;;2279:4;2260:23;;2128:171;2107:6;;;;;;;2061:238;;;;2340:1;2321:16;:20;2313:29;;;;583:1;1871:493;;:::o;1408:455::-;1458:10;567:8;558:17;;;;;;;;:5;;;;;;;;;;;:17;;;;;;;;;550:26;;;;;;1529:20;1552:6;:18;1559:10;1552:18;;;;;;;;;;;;;;;1529:41;;1585:6;:12;;;;;;;;;;;;:46;;;;1615:9;:16;;;;1601:10;:30;;;;1585:46;1581:59;;;1633:7;;;1581:59;1665:4;1650:6;:12;;;:19;;;;;;;;;;;;;;;;;;1694:10;1680:6;:11;;;:24;;;;;;;;;;;;;;;;;;1750:6;:13;;;1715:9;1725:10;1715:21;;;;;;;;;;;;;;;;;:31;;;:48;;;;;;;;;;;1796:10;1785:9;;:21;1778:3;:29;1774:80;;;1818:10;1810:5;;:18;;;;;;;;;;;;;;;;;;;;;;;;1835:17;;;;;;;;;;1774:80;583:1;;1408:455;;:::o;303:31::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "268800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"register(address)": "62200",
								"stage()": "517",
								"vote(uint8)": "83804",
								"winningProposal()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "MSTORE"
								},
								{
									"begin": 324,
									"end": 334,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "DUP1"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "EXP"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "DUP2"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "SLOAD"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "DUP2"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "MUL"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "NOT"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "AND"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "SWAP1"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "DUP4"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "DUP2"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "GT"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "ISZERO"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "JUMPI"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "INVALID"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "JUMPDEST"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "MUL"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "OR"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "SWAP1"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "SSTORE"
								},
								{
									"begin": 303,
									"end": 334,
									"name": "POP"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "2"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "POP"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "MLOAD"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "PUSHSIZE"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "CODESIZE"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "SUB"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "DUP1"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "PUSHSIZE"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "DUP4"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "CODECOPY"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "DUP2"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "DUP2"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "ADD"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "MSTORE"
								},
								{
									"begin": 13,
									"end": 15,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 8,
									"end": 11,
									"name": "DUP2"
								},
								{
									"begin": 5,
									"end": 16,
									"name": "LT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI"
								},
								{
									"begin": 29,
									"end": 30,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 27,
									"name": "DUP1"
								},
								{
									"begin": 19,
									"end": 31,
									"name": "REVERT"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "DUP2"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "ADD"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "SWAP1"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "DUP1"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "DUP1"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "MLOAD"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "SWAP1"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "ADD"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "SWAP1"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "SWAP3"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "SWAP2"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "SWAP1"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "POP"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "POP"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "POP"
								},
								{
									"begin": 740,
									"end": 750,
									"name": "CALLER"
								},
								{
									"begin": 726,
									"end": 737,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 726,
									"end": 737,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "EXP"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "DUP2"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "SLOAD"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "DUP2"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "MUL"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "NOT"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "AND"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "DUP4"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "AND"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "MUL"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "OR"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "SWAP1"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "SSTORE"
								},
								{
									"begin": 726,
									"end": 750,
									"name": "POP"
								},
								{
									"begin": 790,
									"end": 791,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 761,
									"end": 767,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "DUP1"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "SWAP1"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "SLOAD"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "SWAP1"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "EXP"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "SWAP1"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "DIV"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 768,
									"end": 779,
									"name": "AND"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "AND"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "AND"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "DUP2"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "MSTORE"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "ADD"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "SWAP1"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "DUP2"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "MSTORE"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "ADD"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 761,
									"end": 780,
									"name": "KECCAK256"
								},
								{
									"begin": 761,
									"end": 787,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 761,
									"end": 787,
									"name": "ADD"
								},
								{
									"begin": 761,
									"end": 791,
									"name": "DUP2"
								},
								{
									"begin": 761,
									"end": 791,
									"name": "SWAP1"
								},
								{
									"begin": 761,
									"end": 791,
									"name": "SSTORE"
								},
								{
									"begin": 761,
									"end": 791,
									"name": "POP"
								},
								{
									"begin": 821,
									"end": 834,
									"name": "DUP1"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "AND"
								},
								{
									"begin": 802,
									"end": 811,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "DUP2"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "PUSH [tag]",
									"value": "6"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "SWAP2"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "SWAP1"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "PUSH [tag]",
									"value": "7"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "tag",
									"value": "6"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "JUMPDEST"
								},
								{
									"begin": 802,
									"end": 834,
									"name": "POP"
								},
								{
									"begin": 853,
									"end": 862,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 845,
									"end": 850,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 845,
									"end": 850,
									"name": "DUP1"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "EXP"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "DUP2"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "SLOAD"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "DUP2"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "MUL"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "NOT"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "AND"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "SWAP1"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "DUP4"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "DUP2"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "GT"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "ISZERO"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "PUSH [tag]",
									"value": "8"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "JUMPI"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "INVALID"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "tag",
									"value": "8"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "JUMPDEST"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "MUL"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "OR"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "SWAP1"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "SSTORE"
								},
								{
									"begin": 845,
									"end": 862,
									"name": "POP"
								},
								{
									"begin": 885,
									"end": 888,
									"name": "TIMESTAMP"
								},
								{
									"begin": 873,
									"end": 882,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 873,
									"end": 888,
									"name": "DUP2"
								},
								{
									"begin": 873,
									"end": 888,
									"name": "SWAP1"
								},
								{
									"begin": 873,
									"end": 888,
									"name": "SSTORE"
								},
								{
									"begin": 873,
									"end": 888,
									"name": "POP"
								},
								{
									"begin": 674,
									"end": 896,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH [tag]",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "tag",
									"value": "7"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SLOAD"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH [tag]",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP2"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP4"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "MSTORE"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "KECCAK256"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH [tag]",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH [tag]",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMP",
									"value": "[in]"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "tag",
									"value": "11"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "tag",
									"value": "10"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "tag",
									"value": "12"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH [tag]",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SWAP2"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "tag",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "GT"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "ISZERO"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH [tag]",
									"value": "15"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPI"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP3"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SSTORE"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "ADD"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH [tag]",
									"value": "14"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "tag",
									"value": "15"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "POP"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMP"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "tag",
									"value": "13"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "SWAP1"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMP",
									"value": "[out]"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "tag",
									"value": "9"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "JUMPDEST"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "DUP1"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "CODECOPY"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 25,
									"end": 2367,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72305820c8bc698aaa0828611c6ecd09c447d43512e1c87fb16a3f908501c6ef1909e91d64736f6c63430005090032",
									".code": [
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "MSTORE"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "POP"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "LT"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "SHR"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "4420E486"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "609FF1BD"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "B3F98ADC"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "C040E6B8"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "EQ"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "JUMPI"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "JUMPDEST"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "DUP1"
										},
										{
											"begin": 25,
											"end": 2367,
											"name": "REVERT"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "DUP2"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "DUP1"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "AND"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "ADD"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "SWAP3"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "SWAP2"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "SWAP1"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "STOP"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "JUMPDEST"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "JUMPDEST"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "MLOAD"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "DUP1"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "DUP3"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "AND"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "AND"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "DUP2"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "MSTORE"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "ADD"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "SWAP2"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "POP"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "POP"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "MLOAD"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "DUP1"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "SWAP2"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "SUB"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "SWAP1"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "RETURN"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "DUP2"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "ADD"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "DUP1"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "AND"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "ADD"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "SWAP3"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "SWAP2"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "SWAP1"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "STOP"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "DUP3"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "GT"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "ISZERO"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "JUMPI"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "INVALID"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "AND"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "MSTORE"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "ADD"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "POP"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "MLOAD"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "SWAP2"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "SUB"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "RETURN"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "JUMPDEST"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 567,
											"end": 575,
											"name": "DUP1"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "GT"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPI"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "INVALID"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SLOAD"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "EXP"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "DIV"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "AND"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "GT"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPI"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "INVALID"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "EQ"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPI"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "REVERT"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "SWAP1"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "SLOAD"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "SWAP1"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "EXP"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "SWAP1"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "DIV"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1148,
											"end": 1159,
											"name": "AND"
										},
										{
											"begin": 1134,
											"end": 1159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1159,
											"name": "AND"
										},
										{
											"begin": 1134,
											"end": 1144,
											"name": "CALLER"
										},
										{
											"begin": 1134,
											"end": 1159,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1134,
											"end": 1159,
											"name": "AND"
										},
										{
											"begin": 1134,
											"end": 1159,
											"name": "EQ"
										},
										{
											"begin": 1134,
											"end": 1159,
											"name": "ISZERO"
										},
										{
											"begin": 1134,
											"end": 1184,
											"name": "DUP1"
										},
										{
											"begin": 1134,
											"end": 1184,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 1134,
											"end": 1184,
											"name": "JUMPI"
										},
										{
											"begin": 1134,
											"end": 1184,
											"name": "POP"
										},
										{
											"begin": 1163,
											"end": 1169,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1170,
											"end": 1177,
											"name": "DUP4"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "AND"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "AND"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "DUP2"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "MSTORE"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "ADD"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "SWAP1"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "DUP2"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "MSTORE"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "ADD"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1178,
											"name": "KECCAK256"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "ADD"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "SLOAD"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "EXP"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "SWAP1"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "DIV"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1163,
											"end": 1184,
											"name": "AND"
										},
										{
											"begin": 1134,
											"end": 1184,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 1134,
											"end": 1184,
											"name": "JUMPDEST"
										},
										{
											"begin": 1130,
											"end": 1193,
											"name": "ISZERO"
										},
										{
											"begin": 1130,
											"end": 1193,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 1130,
											"end": 1193,
											"name": "JUMPI"
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1186,
											"end": 1193,
											"name": "JUMP"
										},
										{
											"begin": 1130,
											"end": 1193,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 1130,
											"end": 1193,
											"name": "JUMPDEST"
										},
										{
											"begin": 1228,
											"end": 1229,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1203,
											"end": 1209,
											"name": "DUP1"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "DUP5"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "AND"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "AND"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "MSTORE"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "ADD"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "MSTORE"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "ADD"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1218,
											"name": "KECCAK256"
										},
										{
											"begin": 1203,
											"end": 1225,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1203,
											"end": 1225,
											"name": "ADD"
										},
										{
											"begin": 1203,
											"end": 1229,
											"name": "DUP2"
										},
										{
											"begin": 1203,
											"end": 1229,
											"name": "SWAP1"
										},
										{
											"begin": 1203,
											"end": 1229,
											"name": "SSTORE"
										},
										{
											"begin": 1203,
											"end": 1229,
											"name": "POP"
										},
										{
											"begin": 1264,
											"end": 1269,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1246,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "DUP5"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "MSTORE"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "SWAP1"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "MSTORE"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1255,
											"name": "KECCAK256"
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "ADD"
										},
										{
											"begin": 1240,
											"end": 1261,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "EXP"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "SLOAD"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "DUP2"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "MUL"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "NOT"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "AND"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "SWAP1"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "DUP4"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "ISZERO"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "ISZERO"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "MUL"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "OR"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "SWAP1"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "SSTORE"
										},
										{
											"begin": 1240,
											"end": 1269,
											"name": "POP"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "PUSH",
											"value": "1E"
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1292,
											"end": 1301,
											"name": "SLOAD"
										},
										{
											"begin": 1292,
											"end": 1313,
											"name": "ADD"
										},
										{
											"begin": 1285,
											"end": 1288,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1285,
											"end": 1314,
											"name": "GT"
										},
										{
											"begin": 1281,
											"end": 1338,
											"name": "ISZERO"
										},
										{
											"begin": 1281,
											"end": 1338,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 1281,
											"end": 1338,
											"name": "JUMPI"
										},
										{
											"begin": 1325,
											"end": 1335,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1322,
											"name": "DUP1"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "EXP"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "DUP2"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "SLOAD"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "DUP2"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "MUL"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "NOT"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "AND"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "DUP4"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "DUP2"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "GT"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "ISZERO"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "JUMPI"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "INVALID"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "JUMPDEST"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "MUL"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "OR"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "SWAP1"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "SSTORE"
										},
										{
											"begin": 1317,
											"end": 1335,
											"name": "POP"
										},
										{
											"begin": 1281,
											"end": 1338,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 1281,
											"end": 1338,
											"name": "JUMPDEST"
										},
										{
											"begin": 583,
											"end": 584,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 583,
											"end": 584,
											"name": "JUMPDEST"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "POP"
										},
										{
											"begin": 1010,
											"end": 1345,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "JUMPDEST"
										},
										{
											"begin": 1942,
											"end": 1964,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1926,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 567,
											"end": 575,
											"name": "DUP1"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "GT"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPI"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "INVALID"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SLOAD"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "EXP"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "DIV"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "AND"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "GT"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPI"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "INVALID"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "EQ"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPI"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "REVERT"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST"
										},
										{
											"begin": 2022,
											"end": 2046,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "DUP1"
										},
										{
											"begin": 2022,
											"end": 2050,
											"name": "SWAP1"
										},
										{
											"begin": 2022,
											"end": 2050,
											"name": "POP"
										},
										{
											"begin": 2066,
											"end": 2076,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2079,
											"end": 2080,
											"name": "DUP1"
										},
										{
											"begin": 2066,
											"end": 2080,
											"name": "SWAP1"
										},
										{
											"begin": 2066,
											"end": 2080,
											"name": "POP"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2089,
											"end": 2098,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2089,
											"end": 2105,
											"name": "DUP1"
										},
										{
											"begin": 2089,
											"end": 2105,
											"name": "SLOAD"
										},
										{
											"begin": 2089,
											"end": 2105,
											"name": "SWAP1"
										},
										{
											"begin": 2089,
											"end": 2105,
											"name": "POP"
										},
										{
											"begin": 2082,
											"end": 2086,
											"name": "DUP2"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "AND"
										},
										{
											"begin": 2082,
											"end": 2105,
											"name": "LT"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "ISZERO"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "JUMPI"
										},
										{
											"begin": 2160,
											"end": 2176,
											"name": "DUP2"
										},
										{
											"begin": 2132,
											"end": 2141,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2142,
											"end": 2146,
											"name": "DUP3"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "AND"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "DUP2"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "SLOAD"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "DUP2"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "LT"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "JUMPI"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "INVALID"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "JUMPDEST"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "SWAP1"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "MSTORE"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "KECCAK256"
										},
										{
											"begin": 2132,
											"end": 2147,
											"name": "ADD"
										},
										{
											"begin": 2132,
											"end": 2157,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2132,
											"end": 2157,
											"name": "ADD"
										},
										{
											"begin": 2132,
											"end": 2157,
											"name": "SLOAD"
										},
										{
											"begin": 2132,
											"end": 2176,
											"name": "GT"
										},
										{
											"begin": 2128,
											"end": 2299,
											"name": "ISZERO"
										},
										{
											"begin": 2128,
											"end": 2299,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 2128,
											"end": 2299,
											"name": "JUMPI"
										},
										{
											"begin": 2216,
											"end": 2225,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2226,
											"end": 2230,
											"name": "DUP2"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "AND"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "DUP2"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "SLOAD"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "DUP2"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "LT"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "JUMPI"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "INVALID"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "JUMPDEST"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "SWAP1"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "MSTORE"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "KECCAK256"
										},
										{
											"begin": 2216,
											"end": 2231,
											"name": "ADD"
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "ADD"
										},
										{
											"begin": 2216,
											"end": 2241,
											"name": "SLOAD"
										},
										{
											"begin": 2197,
											"end": 2241,
											"name": "SWAP2"
										},
										{
											"begin": 2197,
											"end": 2241,
											"name": "POP"
										},
										{
											"begin": 2279,
											"end": 2283,
											"name": "DUP1"
										},
										{
											"begin": 2260,
											"end": 2283,
											"name": "SWAP4"
										},
										{
											"begin": 2260,
											"end": 2283,
											"name": "POP"
										},
										{
											"begin": 2128,
											"end": 2299,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 2128,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP1"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP1"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "ADD"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "SWAP2"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "POP"
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "POP"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "JUMP"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "JUMPDEST"
										},
										{
											"begin": 2061,
											"end": 2299,
											"name": "POP"
										},
										{
											"begin": 2340,
											"end": 2341,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2337,
											"name": "DUP2"
										},
										{
											"begin": 2321,
											"end": 2341,
											"name": "GT"
										},
										{
											"begin": 2313,
											"end": 2342,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2342,
											"name": "JUMPI"
										},
										{
											"begin": 2313,
											"end": 2342,
											"name": "INVALID"
										},
										{
											"begin": 2313,
											"end": 2342,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 2313,
											"end": 2342,
											"name": "JUMPDEST"
										},
										{
											"begin": 583,
											"end": 584,
											"name": "POP"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "POP"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "SWAP1"
										},
										{
											"begin": 1871,
											"end": 2364,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "JUMPDEST"
										},
										{
											"begin": 1458,
											"end": 1468,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 567,
											"end": 575,
											"name": "DUP1"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "GT"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPI"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "INVALID"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SLOAD"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "EXP"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "SWAP1"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "DIV"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 558,
											"end": 563,
											"name": "AND"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "DUP2"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "GT"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "ISZERO"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPI"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "INVALID"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "JUMPDEST"
										},
										{
											"begin": 558,
											"end": 575,
											"name": "EQ"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPI"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "DUP1"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "REVERT"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 550,
											"end": 576,
											"name": "JUMPDEST"
										},
										{
											"begin": 1529,
											"end": 1549,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1559,
											"end": 1569,
											"name": "CALLER"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "AND"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "MSTORE"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "ADD"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "DUP2"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "MSTORE"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "ADD"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1570,
											"name": "KECCAK256"
										},
										{
											"begin": 1529,
											"end": 1570,
											"name": "SWAP1"
										},
										{
											"begin": 1529,
											"end": 1570,
											"name": "POP"
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "DUP1"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "ADD"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "SLOAD"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "EXP"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "SWAP1"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "DIV"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1585,
											"end": 1597,
											"name": "AND"
										},
										{
											"begin": 1585,
											"end": 1631,
											"name": "DUP1"
										},
										{
											"begin": 1585,
											"end": 1631,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 1585,
											"end": 1631,
											"name": "JUMPI"
										},
										{
											"begin": 1585,
											"end": 1631,
											"name": "POP"
										},
										{
											"begin": 1615,
											"end": 1624,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1615,
											"end": 1631,
											"name": "DUP1"
										},
										{
											"begin": 1615,
											"end": 1631,
											"name": "SLOAD"
										},
										{
											"begin": 1615,
											"end": 1631,
											"name": "SWAP1"
										},
										{
											"begin": 1615,
											"end": 1631,
											"name": "POP"
										},
										{
											"begin": 1601,
											"end": 1611,
											"name": "DUP4"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "AND"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "LT"
										},
										{
											"begin": 1601,
											"end": 1631,
											"name": "ISZERO"
										},
										{
											"begin": 1585,
											"end": 1631,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 1585,
											"end": 1631,
											"name": "JUMPDEST"
										},
										{
											"begin": 1581,
											"end": 1640,
											"name": "ISZERO"
										},
										{
											"begin": 1581,
											"end": 1640,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 1581,
											"end": 1640,
											"name": "JUMPI"
										},
										{
											"begin": 1633,
											"end": 1640,
											"name": "POP"
										},
										{
											"begin": 1633,
											"end": 1640,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 1633,
											"end": 1640,
											"name": "JUMP"
										},
										{
											"begin": 1581,
											"end": 1640,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 1581,
											"end": 1640,
											"name": "JUMPDEST"
										},
										{
											"begin": 1665,
											"end": 1669,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP2"
										},
										{
											"begin": 1650,
											"end": 1662,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1650,
											"end": 1662,
											"name": "ADD"
										},
										{
											"begin": 1650,
											"end": 1662,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "EXP"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP2"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "SLOAD"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP2"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "MUL"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "NOT"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "AND"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "SWAP1"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "DUP4"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "ISZERO"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "ISZERO"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "MUL"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "OR"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "SWAP1"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "SSTORE"
										},
										{
											"begin": 1650,
											"end": 1669,
											"name": "POP"
										},
										{
											"begin": 1694,
											"end": 1704,
											"name": "DUP3"
										},
										{
											"begin": 1680,
											"end": 1686,
											"name": "DUP2"
										},
										{
											"begin": 1680,
											"end": 1691,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1680,
											"end": 1691,
											"name": "ADD"
										},
										{
											"begin": 1680,
											"end": 1691,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "EXP"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "SLOAD"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "DUP2"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "MUL"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "NOT"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "SWAP1"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "DUP4"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "AND"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "MUL"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "OR"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "SWAP1"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "SSTORE"
										},
										{
											"begin": 1680,
											"end": 1704,
											"name": "POP"
										},
										{
											"begin": 1750,
											"end": 1756,
											"name": "DUP1"
										},
										{
											"begin": 1750,
											"end": 1763,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1763,
											"name": "ADD"
										},
										{
											"begin": 1750,
											"end": 1763,
											"name": "SLOAD"
										},
										{
											"begin": 1715,
											"end": 1724,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1725,
											"end": 1735,
											"name": "DUP5"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "AND"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "DUP2"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "SLOAD"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "DUP2"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "LT"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "JUMPI"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "INVALID"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "JUMPDEST"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "SWAP1"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "MSTORE"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "KECCAK256"
										},
										{
											"begin": 1715,
											"end": 1736,
											"name": "ADD"
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "ADD"
										},
										{
											"begin": 1715,
											"end": 1746,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "DUP3"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "DUP3"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "SLOAD"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "ADD"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "SWAP3"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "DUP2"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "SWAP1"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "SSTORE"
										},
										{
											"begin": 1715,
											"end": 1763,
											"name": "POP"
										},
										{
											"begin": 1796,
											"end": 1806,
											"name": "PUSH",
											"value": "3B"
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1785,
											"end": 1794,
											"name": "SLOAD"
										},
										{
											"begin": 1785,
											"end": 1806,
											"name": "ADD"
										},
										{
											"begin": 1778,
											"end": 1781,
											"name": "TIMESTAMP"
										},
										{
											"begin": 1778,
											"end": 1807,
											"name": "GT"
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "ISZERO"
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "JUMPI"
										},
										{
											"begin": 1818,
											"end": 1828,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1815,
											"name": "DUP1"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "EXP"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "DUP2"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SLOAD"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "DUP2"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "MUL"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "NOT"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "AND"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "DUP4"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "DUP2"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "GT"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "ISZERO"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "JUMPI"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "INVALID"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "JUMPDEST"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "MUL"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "OR"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SWAP1"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "SSTORE"
										},
										{
											"begin": 1810,
											"end": 1828,
											"name": "POP"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "PUSH",
											"value": "6AC0C89219F0135E3A87CECDF1851ABCED71DA933A0A00E1EADA0EF035382351"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "MLOAD"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "MLOAD"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "DUP1"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "SWAP2"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "SUB"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "SWAP1"
										},
										{
											"begin": 1835,
											"end": 1852,
											"name": "LOG1"
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 1774,
											"end": 1854,
											"name": "JUMPDEST"
										},
										{
											"begin": 583,
											"end": 584,
											"name": "POP"
										},
										{
											"begin": 583,
											"end": 584,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 583,
											"end": 584,
											"name": "JUMPDEST"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "POP"
										},
										{
											"begin": 1408,
											"end": 1863,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "JUMPDEST"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "DUP1"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "SLOAD"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "EXP"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "SWAP1"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "DIV"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "AND"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "DUP2"
										},
										{
											"begin": 303,
											"end": 334,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"register(address)": "4420e486",
							"stage()": "c040e6b8",
							"vote(uint8)": "b3f98adc",
							"winningProposal()": "609ff1bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.9+commit.e560f70d\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"toVoter\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"winningProposal\",\"outputs\":[{\"name\":\"_winningProposal\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"toProposal\",\"type\":\"uint8\"}],\"name\":\"vote\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stage\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"_numProposals\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"votingCompleted\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{\"constructor\":\"Create a new ballot with $(_numProposals) different proposals.\",\"register(address)\":{\"notice\":\"May only be called by $(chairperson).\"},\"vote(uint8)\":{\"notice\":\"Give a single vote to proposal $(toProposal).\"}}}},\"settings\":{\"compilationTarget\":{\"BallotV3-J.sol\":\"Ballot\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"BallotV3-J.sol\":{\"keccak256\":\"0x49b04b8764ef1651c544baf4dfbced51aa5c71e89f64286ebd09bd3c42b0a683\",\"urls\":[\"bzzr://181c8fdcb90def515a6c6f11c711a1e701ea577c2d8b53a11c9ca9fe51960602\",\"dweb:/ipfs/QmQxtLzY4Hq27BwxwcQyjzmDoYnYfhbz8FqLv9BaoPEfRD\"]}},\"version\":1}",
					"userdoc": {
						"methods": {
							"constructor": "Create a new ballot with $(_numProposals) different proposals.",
							"register(address)": {
								"notice": "May only be called by $(chairperson)."
							},
							"vote(uint8)": {
								"notice": "Give a single vote to proposal $(toProposal)."
							}
						}
					}
				}
			}
		},
		"sources": {
			"BallotV3-J.sol": {
				"ast": {
					"absolutePath": "BallotV3-J.sol",
					"exportedSymbols": {
						"Ballot": [
							240
						]
					},
					"id": 241,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.5",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 240,
							"linearizedBaseContracts": [
								240
							],
							"name": "Ballot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Ballot.Voter",
									"id": 8,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "weight",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "74:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "74:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "voted",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "96:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 4,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "96:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"name": "vote",
											"nodeType": "VariableDeclaration",
											"scope": 8,
											"src": "117:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 6,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "117:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Voter",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "50:114:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Proposal",
									"id": 11,
									"members": [
										{
											"constant": false,
											"id": 10,
											"name": "voteCount",
											"nodeType": "VariableDeclaration",
											"scope": 11,
											"src": "197:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 9,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "197:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Proposal",
									"nodeType": "StructDefinition",
									"scope": 240,
									"src": "170:88:0",
									"visibility": "public"
								},
								{
									"canonicalName": "Ballot.Stage",
									"id": 16,
									"members": [
										{
											"id": 12,
											"name": "Init",
											"nodeType": "EnumValue",
											"src": "276:4:0"
										},
										{
											"id": 13,
											"name": "Reg",
											"nodeType": "EnumValue",
											"src": "281:3:0"
										},
										{
											"id": 14,
											"name": "Vote",
											"nodeType": "EnumValue",
											"src": "286:4:0"
										},
										{
											"id": 15,
											"name": "Done",
											"nodeType": "EnumValue",
											"src": "292:4:0"
										}
									],
									"name": "Stage",
									"nodeType": "EnumDefinition",
									"src": "264:33:0"
								},
								{
									"constant": false,
									"id": 20,
									"name": "stage",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "303:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_Stage_$16",
										"typeString": "enum Ballot.Stage"
									},
									"typeName": {
										"contractScope": null,
										"id": 17,
										"name": "Stage",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 16,
										"src": "303:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"value": {
										"argumentTypes": null,
										"expression": {
											"argumentTypes": null,
											"id": 18,
											"name": "Stage",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 16,
											"src": "324:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
												"typeString": "type(enum Ballot.Stage)"
											}
										},
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"memberName": "Init",
										"nodeType": "MemberAccess",
										"referencedDeclaration": null,
										"src": "324:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_Stage_$16",
											"typeString": "enum Ballot.Stage"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "chairperson",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "343:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "343:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 26,
									"name": "voters",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "369:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
										"typeString": "mapping(address => struct Ballot.Voter)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "377:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "369:25:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
											"typeString": "mapping(address => struct Ballot.Voter)"
										},
										"valueType": {
											"contractScope": null,
											"id": 24,
											"name": "Voter",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 8,
											"src": "388:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
												"typeString": "struct Ballot.Voter"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 29,
									"name": "proposals",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "408:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
										"typeString": "struct Ballot.Proposal[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 27,
											"name": "Proposal",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 11,
											"src": "408:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Proposal_$11_storage_ptr",
												"typeString": "struct Ballot.Proposal"
											}
										},
										"id": 28,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "408:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage_ptr",
											"typeString": "struct Ballot.Proposal[]"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 31,
									"name": "votingCompleted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "458:2:0"
									},
									"src": "437:24:0"
								},
								{
									"constant": false,
									"id": 33,
									"name": "startTime",
									"nodeType": "VariableDeclaration",
									"scope": 240,
									"src": "469:14:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 32,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "469:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 44,
										"nodeType": "Block",
										"src": "548:44:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_Stage_$16",
																"typeString": "enum Ballot.Stage"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 38,
																"name": "stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 20,
																"src": "558:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 39,
																"name": "reqStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "567:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"src": "558:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 37,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															258,
															259
														],
														"referencedDeclaration": 258,
														"src": "550:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "550:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "550:26:0"
											},
											{
												"id": 43,
												"nodeType": "PlaceholderStatement",
												"src": "583:1:0"
											}
										]
									},
									"documentation": null,
									"id": 45,
									"name": "validStage",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"name": "reqStage",
												"nodeType": "VariableDeclaration",
												"scope": 45,
												"src": "527:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Stage_$16",
													"typeString": "enum Ballot.Stage"
												},
												"typeName": {
													"contractScope": null,
													"id": 34,
													"name": "Stage",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 16,
													"src": "527:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "526:16:0"
									},
									"src": "507:85:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "715:181:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "chairperson",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 22,
														"src": "726:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 51,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "740:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "740:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "726:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "726:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 55,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "761:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 57,
															"indexExpression": {
																"argumentTypes": null,
																"id": 56,
																"name": "chairperson",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 22,
																"src": "768:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "761:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "761:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "32",
														"id": 59,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "790:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "761:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "761:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 62,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "802:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 64,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "802:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 65,
														"name": "_numProposals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 47,
														"src": "821:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "802:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 67,
												"nodeType": "ExpressionStatement",
												"src": "802:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 68,
														"name": "stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "845:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 69,
															"name": "Stage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "853:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																"typeString": "type(enum Ballot.Stage)"
															}
														},
														"id": 70,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Reg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "853:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Stage_$16",
															"typeString": "enum Ballot.Stage"
														}
													},
													"src": "845:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "845:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 73,
														"name": "startTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "873:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 74,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "885:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "873:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "873:15:0"
											}
										]
									},
									"documentation": "Create a new ballot with $(_numProposals) different proposals.",
									"id": 78,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"name": "_numProposals",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "686:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 46,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "686:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "685:21:0"
									},
									"returnParameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "715:0:0"
									},
									"scope": 240,
									"src": "674:222:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "1074:271:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 90,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 87,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 255,
																"src": "1134:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1134:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"argumentTypes": null,
															"id": 89,
															"name": "chairperson",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "1148:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "1134:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 91,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1163:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 93,
															"indexExpression": {
																"argumentTypes": null,
																"id": 92,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1170:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1163:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 94,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1163:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1134:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 97,
												"nodeType": "IfStatement",
												"src": "1130:63:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 86,
													"id": 96,
													"nodeType": "Return",
													"src": "1186:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 98,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1203:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 100,
															"indexExpression": {
																"argumentTypes": null,
																"id": 99,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1210:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1203:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1203:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1228:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1203:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "1203:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 105,
																"name": "voters",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 26,
																"src": "1240:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
																	"typeString": "mapping(address => struct Ballot.Voter storage ref)"
																}
															},
															"id": 107,
															"indexExpression": {
																"argumentTypes": null,
																"id": 106,
																"name": "toVoter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "1247:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1240:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage",
																"typeString": "struct Ballot.Voter storage ref"
															}
														},
														"id": 108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1240:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1264:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1240:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "1240:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 112,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1285:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 113,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "1292:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3330",
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1303:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_30_by_1",
																		"typeString": "int_const 30"
																	},
																	"value": "30"
																},
																"src": "1292:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 116,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1291:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1285:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 124,
												"nodeType": "IfStatement",
												"src": "1281:57:0",
												"trueBody": {
													"id": 123,
													"nodeType": "Block",
													"src": "1316:22:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 118,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1317:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 119,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1325:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Vote",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1325:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1317:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 122,
															"nodeType": "ExpressionStatement",
															"src": "1317:18:0"
														}
													]
												}
											}
										]
									},
									"documentation": "May only be called by $(chairperson).",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 83,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1063:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Reg",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1063:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 85,
											"modifierName": {
												"argumentTypes": null,
												"id": 82,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1052:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1052:21:0"
										}
									],
									"name": "register",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 80,
												"name": "toVoter",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "1028:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 79,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1028:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1027:17:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1074:0:0"
									},
									"scope": 240,
									"src": "1010:335:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "1471:392:0",
										"statements": [
											{
												"assignments": [
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 136,
														"name": "sender",
														"nodeType": "VariableDeclaration",
														"scope": 187,
														"src": "1529:20:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
															"typeString": "struct Ballot.Voter"
														},
														"typeName": {
															"contractScope": null,
															"id": 135,
															"name": "Voter",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 8,
															"src": "1529:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"id": 137,
														"name": "voters",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "1552:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Voter_$8_storage_$",
															"typeString": "mapping(address => struct Ballot.Voter storage ref)"
														}
													},
													"id": 140,
													"indexExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 138,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 255,
															"src": "1559:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 139,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1559:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1552:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Voter_$8_storage",
														"typeString": "struct Ballot.Voter storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1529:41:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 142,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1585:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 143,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1585:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 144,
															"name": "toProposal",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "1601:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 145,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1615:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 146,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "1615:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1601:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1585:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 150,
												"nodeType": "IfStatement",
												"src": "1581:59:0",
												"trueBody": {
													"expression": null,
													"functionReturnParameters": 134,
													"id": 149,
													"nodeType": "Return",
													"src": "1633:7:0"
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 151,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1650:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 153,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voted",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "1650:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "74727565",
														"id": 154,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1665:4:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "1650:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 156,
												"nodeType": "ExpressionStatement",
												"src": "1650:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 157,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1680:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 159,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "vote",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 7,
														"src": "1680:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 160,
														"name": "toProposal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "1694:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1680:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "1680:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 163,
																"name": "proposals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1715:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																	"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																}
															},
															"id": 165,
															"indexExpression": {
																"argumentTypes": null,
																"id": 164,
																"name": "toProposal",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 128,
																"src": "1725:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1715:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Proposal_$11_storage",
																"typeString": "struct Ballot.Proposal storage ref"
															}
														},
														"id": 166,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "voteCount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 10,
														"src": "1715:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 167,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "1750:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Voter_$8_storage_ptr",
																"typeString": "struct Ballot.Voter storage pointer"
															}
														},
														"id": 168,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weight",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "1750:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1715:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "1715:48:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 171,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "1778:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"components": [
															{
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 172,
																	"name": "startTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 33,
																	"src": "1785:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "3539",
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1796:10:0",
																	"subdenomination": "seconds",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_59_by_1",
																		"typeString": "int_const 59"
																	},
																	"value": "59"
																},
																"src": "1785:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 175,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1784:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1778:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 186,
												"nodeType": "IfStatement",
												"src": "1774:80:0",
												"trueBody": {
													"id": 185,
													"nodeType": "Block",
													"src": "1809:45:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 180,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 177,
																	"name": "stage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "1810:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 178,
																		"name": "Stage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 16,
																		"src": "1818:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
																			"typeString": "type(enum Ballot.Stage)"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "Done",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1818:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Stage_$16",
																		"typeString": "enum Ballot.Stage"
																	}
																},
																"src": "1810:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Stage_$16",
																	"typeString": "enum Ballot.Stage"
																}
															},
															"id": 181,
															"nodeType": "ExpressionStatement",
															"src": "1810:18:0"
														},
														{
															"eventCall": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 182,
																	"name": "votingCompleted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "1835:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 183,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1835:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 184,
															"nodeType": "EmitStatement",
															"src": "1830:22:0"
														}
													]
												}
											}
										]
									},
									"documentation": "Give a single vote to proposal $(toProposal).",
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 131,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1458:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Vote",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1458:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 133,
											"modifierName": {
												"argumentTypes": null,
												"id": 130,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1447:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1447:22:0"
										}
									],
									"name": "vote",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "toProposal",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "1422:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 127,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1422:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1421:18:0"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1471:0:0"
									},
									"scope": 240,
									"src": "1408:455:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 238,
										"nodeType": "Block",
										"src": "1966:398:0",
										"statements": [
											{
												"assignments": [
													198
												],
												"declarations": [
													{
														"constant": false,
														"id": 198,
														"name": "winningVoteCount",
														"nodeType": "VariableDeclaration",
														"scope": 238,
														"src": "2022:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 197,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2022:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 200,
												"initialValue": {
													"argumentTypes": null,
													"hexValue": "30",
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2049:1:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2022:28:0"
											},
											{
												"body": {
													"condition": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 212,
																	"name": "proposals",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "2132:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																		"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																	}
																},
																"id": 214,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "prop",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 202,
																	"src": "2142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2132:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Proposal_$11_storage",
																	"typeString": "struct Ballot.Proposal storage ref"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voteCount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 10,
															"src": "2132:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"argumentTypes": null,
															"id": 216,
															"name": "winningVoteCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "2160:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2132:44:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": null,
													"id": 230,
													"nodeType": "IfStatement",
													"src": "2128:171:0",
													"trueBody": {
														"id": 229,
														"nodeType": "Block",
														"src": "2178:121:0",
														"statements": [
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 218,
																		"name": "winningVoteCount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 198,
																		"src": "2197:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 219,
																				"name": "proposals",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 29,
																				"src": "2216:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																					"typeString": "struct Ballot.Proposal storage ref[] storage ref"
																				}
																			},
																			"id": 221,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 220,
																				"name": "prop",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 202,
																				"src": "2226:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2216:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Proposal_$11_storage",
																				"typeString": "struct Ballot.Proposal storage ref"
																			}
																		},
																		"id": 222,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "voteCount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 10,
																		"src": "2216:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2197:44:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 224,
																"nodeType": "ExpressionStatement",
																"src": "2197:44:0"
															},
															{
																"expression": {
																	"argumentTypes": null,
																	"id": 227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"argumentTypes": null,
																		"id": 225,
																		"name": "_winningProposal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 195,
																		"src": "2260:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"argumentTypes": null,
																		"id": 226,
																		"name": "prop",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "2279:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"src": "2260:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"id": 228,
																"nodeType": "ExpressionStatement",
																"src": "2260:23:0"
															}
														]
													}
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 205,
														"name": "prop",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2082:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 206,
															"name": "proposals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2089:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Proposal_$11_storage_$dyn_storage",
																"typeString": "struct Ballot.Proposal storage ref[] storage ref"
															}
														},
														"id": 207,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2089:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2082:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 231,
												"initializationExpression": {
													"assignments": [
														202
													],
													"declarations": [
														{
															"constant": false,
															"id": 202,
															"name": "prop",
															"nodeType": "VariableDeclaration",
															"scope": 231,
															"src": "2066:10:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"typeName": {
																"id": 201,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "2066:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 204,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2079:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2066:14:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2107:6:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 209,
															"name": "prop",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "2107:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 211,
													"nodeType": "ExpressionStatement",
													"src": "2107:6:0"
												},
												"nodeType": "ForStatement",
												"src": "2061:238:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 233,
																"name": "winningVoteCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 198,
																"src": "2321:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2340:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2321:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 232,
														"name": "assert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 244,
														"src": "2313:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 237,
												"nodeType": "ExpressionStatement",
												"src": "2313:29:0"
											}
										]
									},
									"documentation": null,
									"id": 239,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 191,
														"name": "Stage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "1916:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_enum$_Stage_$16_$",
															"typeString": "type(enum Ballot.Stage)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "Done",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "1916:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Stage_$16",
														"typeString": "enum Ballot.Stage"
													}
												}
											],
											"id": 193,
											"modifierName": {
												"argumentTypes": null,
												"id": 190,
												"name": "validStage",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 45,
												"src": "1905:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_enum$_Stage_$16_$",
													"typeString": "modifier (enum Ballot.Stage)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1905:22:0"
										}
									],
									"name": "winningProposal",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1895:2:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"name": "_winningProposal",
												"nodeType": "VariableDeclaration",
												"scope": 239,
												"src": "1942:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 194,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1942:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1941:24:0"
									},
									"scope": 240,
									"src": "1871:493:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 241,
							"src": "25:2342:0"
						}
					],
					"src": "0:2367:0"
				},
				"id": 0
			}
		}
	}
}